
demo:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
       8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
       c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      28:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_10>
      2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__vector_11>
      30:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__vector_12>
      34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
      4c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__vector_19>
      50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	20 e0       	ldi	r18, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a9 38       	cpi	r26, 0x89	; 137
      6c:	b2 07       	cpc	r27, r18
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
      70:	0e 94 80 09 	call	0x1300	; 0x1300 <main>
      74:	0c 94 de 09 	jmp	0x13bc	; 0x13bc <_exit>

00000078 <__bad_interrupt>:
      78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <unsigned char JTAG::transaction::shift_xr<(unsigned char)1>(unsigned char) [clone .isra.0]>:
      7c:	da 9a       	sbi	0x1b, 2	; 27
      7e:	da 98       	cbi	0x1b, 2	; 27
      80:	80 ff       	sbrs	r24, 0
      82:	03 c0       	rjmp	.+6      	; 0x8a <unsigned char JTAG::transaction::shift_xr<(unsigned char)1>(unsigned char) [clone .isra.0]+0xe>
      84:	d9 9a       	sbi	0x1b, 1	; 27
      86:	89 b3       	in	r24, 0x19	; 25
      88:	08 95       	ret
      8a:	d9 98       	cbi	0x1b, 1	; 27
      8c:	89 b3       	in	r24, 0x19	; 25
      8e:	08 95       	ret

00000090 <__vector_10>:
      90:	1f 92       	push	r1
      92:	1f b6       	in	r1, 0x3f	; 63
      94:	1f 92       	push	r1
      96:	11 24       	eor	r1, r1
      98:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <spi>
      9c:	1f 90       	pop	r1
      9e:	1f be       	out	0x3f, r1	; 63
      a0:	1f 90       	pop	r1
      a2:	18 95       	reti

000000a4 <__vector_11>:
      a4:	2f 93       	push	r18
      a6:	2f b7       	in	r18, 0x3f	; 63
      a8:	2f 93       	push	r18
      aa:	3f 93       	push	r19
      ac:	4f 93       	push	r20
      ae:	5f 93       	push	r21
      b0:	8f 93       	push	r24
      b2:	9f 93       	push	r25
      b4:	ef 93       	push	r30
      b6:	ff 93       	push	r31
      b8:	5c b1       	in	r21, 0x0c	; 12
      ba:	40 91 7c 00 	lds	r20, 0x007C	; 0x80007c <uart+0x8>
      be:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <uart+0x9>
      c2:	90 e0       	ldi	r25, 0x00	; 0
      c4:	9c 01       	movw	r18, r24
      c6:	2f 5f       	subi	r18, 0xFF	; 255
      c8:	3f 4f       	sbci	r19, 0xFF	; 255
      ca:	27 70       	andi	r18, 0x07	; 7
      cc:	33 27       	eor	r19, r19
      ce:	42 17       	cp	r20, r18
      d0:	31 f0       	breq	.+12     	; 0xde <__vector_11+0x3a>
      d2:	8c 58       	subi	r24, 0x8C	; 140
      d4:	9f 4f       	sbci	r25, 0xFF	; 255
      d6:	fc 01       	movw	r30, r24
      d8:	50 83       	st	Z, r21
      da:	20 93 7d 00 	sts	0x007D, r18	; 0x80007d <uart+0x9>
      de:	ff 91       	pop	r31
      e0:	ef 91       	pop	r30
      e2:	9f 91       	pop	r25
      e4:	8f 91       	pop	r24
      e6:	5f 91       	pop	r21
      e8:	4f 91       	pop	r20
      ea:	3f 91       	pop	r19
      ec:	2f 91       	pop	r18
      ee:	2f bf       	out	0x3f, r18	; 63
      f0:	2f 91       	pop	r18
      f2:	18 95       	reti

000000f4 <__vector_12>:
      f4:	2f 93       	push	r18
      f6:	2f b7       	in	r18, 0x3f	; 63
      f8:	2f 93       	push	r18
      fa:	8f 93       	push	r24
      fc:	9f 93       	push	r25
      fe:	ef 93       	push	r30
     100:	ff 93       	push	r31
     102:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <uart+0x12>
     106:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <uart+0x13>
     10a:	89 17       	cp	r24, r25
     10c:	99 f0       	breq	.+38     	; 0x134 <__vector_12+0x40>
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	fc 01       	movw	r30, r24
     112:	ec 58       	subi	r30, 0x8C	; 140
     114:	ff 4f       	sbci	r31, 0xFF	; 255
     116:	22 85       	ldd	r18, Z+10	; 0x0a
     118:	01 96       	adiw	r24, 0x01	; 1
     11a:	87 70       	andi	r24, 0x07	; 7
     11c:	99 27       	eor	r25, r25
     11e:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <uart+0x12>
     122:	2c b9       	out	0x0c, r18	; 12
     124:	ff 91       	pop	r31
     126:	ef 91       	pop	r30
     128:	9f 91       	pop	r25
     12a:	8f 91       	pop	r24
     12c:	2f 91       	pop	r18
     12e:	2f bf       	out	0x3f, r18	; 63
     130:	2f 91       	pop	r18
     132:	18 95       	reti
     134:	55 98       	cbi	0x0a, 5	; 10
     136:	f6 cf       	rjmp	.-20     	; 0x124 <__vector_12+0x30>

00000138 <__vector_19>:
     138:	8f 93       	push	r24
     13a:	8f b7       	in	r24, 0x3f	; 63
     13c:	8f 93       	push	r24
     13e:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Timer::count>
     142:	8f 5f       	subi	r24, 0xFF	; 255
     144:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <Timer::count>
     148:	8f 91       	pop	r24
     14a:	8f bf       	out	0x3f, r24	; 63
     14c:	8f 91       	pop	r24
     14e:	18 95       	reti

00000150 <PigroProto::read_packet()>:
     150:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <uart+0x8>
     154:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <uart+0x9>
     158:	89 17       	cp	r24, r25
     15a:	09 f4       	brne	.+2      	; 0x15e <PigroProto::read_packet()+0xe>
     15c:	68 c0       	rjmp	.+208    	; 0x22e <PigroProto::read_packet()+0xde>
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	fc 01       	movw	r30, r24
     162:	ec 58       	subi	r30, 0x8C	; 140
     164:	ff 4f       	sbci	r31, 0xFF	; 255
     166:	20 81       	ld	r18, Z
     168:	20 93 66 00 	sts	0x0066, r18	; 0x800066 <PigroProto::pkt>
     16c:	01 96       	adiw	r24, 0x01	; 1
     16e:	87 70       	andi	r24, 0x07	; 7
     170:	99 27       	eor	r25, r25
     172:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <uart+0x8>
     176:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <Timer::count>
     17a:	12 be       	out	0x32, r1	; 50
     17c:	8a ef       	ldi	r24, 0xFA	; 250
     17e:	8c bf       	out	0x3c, r24	; 60
     180:	89 b7       	in	r24, 0x39	; 57
     182:	82 60       	ori	r24, 0x02	; 2
     184:	89 bf       	out	0x39, r24	; 57
     186:	8a e0       	ldi	r24, 0x0A	; 10
     188:	83 bf       	out	0x33, r24	; 51
     18a:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <uart+0x8>
     18e:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <uart+0x9>
     192:	98 17       	cp	r25, r24
     194:	d1 f1       	breq	.+116    	; 0x20a <PigroProto::read_packet()+0xba>
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	fc 01       	movw	r30, r24
     19a:	ec 58       	subi	r30, 0x8C	; 140
     19c:	ff 4f       	sbci	r31, 0xFF	; 255
     19e:	20 81       	ld	r18, Z
     1a0:	20 93 67 00 	sts	0x0067, r18	; 0x800067 <PigroProto::pkt+0x1>
     1a4:	01 96       	adiw	r24, 0x01	; 1
     1a6:	87 70       	andi	r24, 0x07	; 7
     1a8:	99 27       	eor	r25, r25
     1aa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <uart+0x8>
     1ae:	2d 30       	cpi	r18, 0x0D	; 13
     1b0:	c0 f5       	brcc	.+112    	; 0x222 <PigroProto::read_packet()+0xd2>
     1b2:	22 23       	and	r18, r18
     1b4:	09 f4       	brne	.+2      	; 0x1b8 <PigroProto::read_packet()+0x68>
     1b6:	3d c0       	rjmp	.+122    	; 0x232 <PigroProto::read_packet()+0xe2>
     1b8:	20 e0       	ldi	r18, 0x00	; 0
     1ba:	13 c0       	rjmp	.+38     	; 0x1e2 <PigroProto::read_packet()+0x92>
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	fc 01       	movw	r30, r24
     1c0:	ec 58       	subi	r30, 0x8C	; 140
     1c2:	ff 4f       	sbci	r31, 0xFF	; 255
     1c4:	30 81       	ld	r19, Z
     1c6:	4a 59       	subi	r20, 0x9A	; 154
     1c8:	5f 4f       	sbci	r21, 0xFF	; 255
     1ca:	fa 01       	movw	r30, r20
     1cc:	32 83       	std	Z+2, r19	; 0x02
     1ce:	01 96       	adiw	r24, 0x01	; 1
     1d0:	87 70       	andi	r24, 0x07	; 7
     1d2:	99 27       	eor	r25, r25
     1d4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <uart+0x8>
     1d8:	2f 5f       	subi	r18, 0xFF	; 255
     1da:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
     1de:	28 17       	cp	r18, r24
     1e0:	40 f5       	brcc	.+80     	; 0x232 <PigroProto::read_packet()+0xe2>
     1e2:	42 2f       	mov	r20, r18
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <uart+0x8>
     1ea:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <uart+0x9>
     1ee:	89 13       	cpse	r24, r25
     1f0:	e5 cf       	rjmp	.-54     	; 0x1bc <PigroProto::read_packet()+0x6c>
     1f2:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Timer::count>
     1f6:	81 3a       	cpi	r24, 0xA1	; 161
     1f8:	a0 f4       	brcc	.+40     	; 0x222 <PigroProto::read_packet()+0xd2>
     1fa:	88 95       	sleep
     1fc:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <uart+0x8>
     200:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <uart+0x9>
     204:	89 13       	cpse	r24, r25
     206:	da cf       	rjmp	.-76     	; 0x1bc <PigroProto::read_packet()+0x6c>
     208:	f4 cf       	rjmp	.-24     	; 0x1f2 <PigroProto::read_packet()+0xa2>
     20a:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Timer::count>
     20e:	81 3a       	cpi	r24, 0xA1	; 161
     210:	40 f4       	brcc	.+16     	; 0x222 <PigroProto::read_packet()+0xd2>
     212:	88 95       	sleep
     214:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <uart+0x8>
     218:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <uart+0x9>
     21c:	89 13       	cpse	r24, r25
     21e:	bb cf       	rjmp	.-138    	; 0x196 <PigroProto::read_packet()+0x46>
     220:	f4 cf       	rjmp	.-24     	; 0x20a <PigroProto::read_packet()+0xba>
     222:	80 e0       	ldi	r24, 0x00	; 0
     224:	99 b7       	in	r25, 0x39	; 57
     226:	9d 7f       	andi	r25, 0xFD	; 253
     228:	99 bf       	out	0x39, r25	; 57
     22a:	13 be       	out	0x33, r1	; 51
     22c:	08 95       	ret
     22e:	88 95       	sleep
     230:	8f cf       	rjmp	.-226    	; 0x150 <PigroProto::read_packet()>
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	99 b7       	in	r25, 0x39	; 57
     236:	9d 7f       	andi	r25, 0xFD	; 253
     238:	99 bf       	out	0x39, r25	; 57
     23a:	13 be       	out	0x33, r1	; 51
     23c:	08 95       	ret

0000023e <PigroProto::send_packet()>:
     23e:	50 91 66 00 	lds	r21, 0x0066	; 0x800066 <PigroProto::pkt>
     242:	40 91 86 00 	lds	r20, 0x0086	; 0x800086 <uart+0x12>
     246:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <uart+0x13>
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	9c 01       	movw	r18, r24
     24e:	2f 5f       	subi	r18, 0xFF	; 255
     250:	3f 4f       	sbci	r19, 0xFF	; 255
     252:	27 70       	andi	r18, 0x07	; 7
     254:	24 17       	cp	r18, r20
     256:	09 f4       	brne	.+2      	; 0x25a <PigroProto::send_packet()+0x1c>
     258:	4f c0       	rjmp	.+158    	; 0x2f8 <PigroProto::send_packet()+0xba>
     25a:	8c 58       	subi	r24, 0x8C	; 140
     25c:	9f 4f       	sbci	r25, 0xFF	; 255
     25e:	fc 01       	movw	r30, r24
     260:	52 87       	std	Z+10, r21	; 0x0a
     262:	20 93 87 00 	sts	0x0087, r18	; 0x800087 <uart+0x13>
     266:	55 9a       	sbi	0x0a, 5	; 10
     268:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
     26c:	65 2f       	mov	r22, r21
     26e:	40 91 86 00 	lds	r20, 0x0086	; 0x800086 <uart+0x12>
     272:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <uart+0x13>
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	9c 01       	movw	r18, r24
     27a:	2f 5f       	subi	r18, 0xFF	; 255
     27c:	3f 4f       	sbci	r19, 0xFF	; 255
     27e:	27 70       	andi	r18, 0x07	; 7
     280:	24 17       	cp	r18, r20
     282:	09 f4       	brne	.+2      	; 0x286 <PigroProto::send_packet()+0x48>
     284:	4a c0       	rjmp	.+148    	; 0x31a <PigroProto::send_packet()+0xdc>
     286:	8c 58       	subi	r24, 0x8C	; 140
     288:	9f 4f       	sbci	r25, 0xFF	; 255
     28a:	fc 01       	movw	r30, r24
     28c:	62 87       	std	Z+10, r22	; 0x0a
     28e:	20 93 87 00 	sts	0x0087, r18	; 0x800087 <uart+0x13>
     292:	55 9a       	sbi	0x0a, 5	; 10
     294:	55 23       	and	r21, r21
     296:	79 f1       	breq	.+94     	; 0x2f6 <PigroProto::send_packet()+0xb8>
     298:	40 e0       	ldi	r20, 0x00	; 0
     29a:	0a c0       	rjmp	.+20     	; 0x2b0 <PigroProto::send_packet()+0x72>
     29c:	8c 58       	subi	r24, 0x8C	; 140
     29e:	9f 4f       	sbci	r25, 0xFF	; 255
     2a0:	fc 01       	movw	r30, r24
     2a2:	72 87       	std	Z+10, r23	; 0x0a
     2a4:	20 93 87 00 	sts	0x0087, r18	; 0x800087 <uart+0x13>
     2a8:	55 9a       	sbi	0x0a, 5	; 10
     2aa:	4f 5f       	subi	r20, 0xFF	; 255
     2ac:	45 17       	cp	r20, r21
     2ae:	18 f5       	brcc	.+70     	; 0x2f6 <PigroProto::send_packet()+0xb8>
     2b0:	e4 2f       	mov	r30, r20
     2b2:	f0 e0       	ldi	r31, 0x00	; 0
     2b4:	ea 59       	subi	r30, 0x9A	; 154
     2b6:	ff 4f       	sbci	r31, 0xFF	; 255
     2b8:	72 81       	ldd	r23, Z+2	; 0x02
     2ba:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <uart+0x12>
     2be:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <uart+0x13>
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	9c 01       	movw	r18, r24
     2c6:	2f 5f       	subi	r18, 0xFF	; 255
     2c8:	3f 4f       	sbci	r19, 0xFF	; 255
     2ca:	27 70       	andi	r18, 0x07	; 7
     2cc:	62 13       	cpse	r22, r18
     2ce:	e6 cf       	rjmp	.-52     	; 0x29c <PigroProto::send_packet()+0x5e>
     2d0:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Timer::count>
     2d4:	81 3a       	cpi	r24, 0xA1	; 161
     2d6:	a0 f5       	brcc	.+104    	; 0x340 <PigroProto::send_packet()+0x102>
     2d8:	88 95       	sleep
     2da:	50 91 86 00 	lds	r21, 0x0086	; 0x800086 <uart+0x12>
     2de:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <uart+0x13>
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	9c 01       	movw	r18, r24
     2e6:	2f 5f       	subi	r18, 0xFF	; 255
     2e8:	3f 4f       	sbci	r19, 0xFF	; 255
     2ea:	27 70       	andi	r18, 0x07	; 7
     2ec:	52 17       	cp	r21, r18
     2ee:	81 f3       	breq	.-32     	; 0x2d0 <PigroProto::send_packet()+0x92>
     2f0:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
     2f4:	d3 cf       	rjmp	.-90     	; 0x29c <PigroProto::send_packet()+0x5e>
     2f6:	08 95       	ret
     2f8:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Timer::count>
     2fc:	81 3a       	cpi	r24, 0xA1	; 161
     2fe:	08 f5       	brcc	.+66     	; 0x342 <PigroProto::send_packet()+0x104>
     300:	88 95       	sleep
     302:	40 91 86 00 	lds	r20, 0x0086	; 0x800086 <uart+0x12>
     306:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <uart+0x13>
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	9c 01       	movw	r18, r24
     30e:	2f 5f       	subi	r18, 0xFF	; 255
     310:	3f 4f       	sbci	r19, 0xFF	; 255
     312:	27 70       	andi	r18, 0x07	; 7
     314:	42 13       	cpse	r20, r18
     316:	a1 cf       	rjmp	.-190    	; 0x25a <PigroProto::send_packet()+0x1c>
     318:	ef cf       	rjmp	.-34     	; 0x2f8 <PigroProto::send_packet()+0xba>
     31a:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Timer::count>
     31e:	81 3a       	cpi	r24, 0xA1	; 161
     320:	88 f4       	brcc	.+34     	; 0x344 <PigroProto::send_packet()+0x106>
     322:	88 95       	sleep
     324:	40 91 86 00 	lds	r20, 0x0086	; 0x800086 <uart+0x12>
     328:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <uart+0x13>
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	9c 01       	movw	r18, r24
     330:	2f 5f       	subi	r18, 0xFF	; 255
     332:	3f 4f       	sbci	r19, 0xFF	; 255
     334:	27 70       	andi	r18, 0x07	; 7
     336:	42 17       	cp	r20, r18
     338:	81 f3       	breq	.-32     	; 0x31a <PigroProto::send_packet()+0xdc>
     33a:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
     33e:	a3 cf       	rjmp	.-186    	; 0x286 <PigroProto::send_packet()+0x48>
     340:	08 95       	ret
     342:	08 95       	ret
     344:	08 95       	ret

00000346 <PigroProto::skip_trash()>:
     346:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <Timer::count>
     34a:	12 be       	out	0x32, r1	; 50
     34c:	8a ef       	ldi	r24, 0xFA	; 250
     34e:	8c bf       	out	0x3c, r24	; 60
     350:	89 b7       	in	r24, 0x39	; 57
     352:	82 60       	ori	r24, 0x02	; 2
     354:	89 bf       	out	0x39, r24	; 57
     356:	8a e0       	ldi	r24, 0x0A	; 10
     358:	83 bf       	out	0x33, r24	; 51
     35a:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Timer::count>
     35e:	81 3a       	cpi	r24, 0xA1	; 161
     360:	e8 f4       	brcc	.+58     	; 0x39c <PigroProto::skip_trash()+0x56>
     362:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <uart+0x8>
     366:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <uart+0x9>
     36a:	89 17       	cp	r24, r25
     36c:	91 f0       	breq	.+36     	; 0x392 <PigroProto::skip_trash()+0x4c>
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	fc 01       	movw	r30, r24
     372:	ec 58       	subi	r30, 0x8C	; 140
     374:	ff 4f       	sbci	r31, 0xFF	; 255
     376:	20 81       	ld	r18, Z
     378:	01 96       	adiw	r24, 0x01	; 1
     37a:	87 70       	andi	r24, 0x07	; 7
     37c:	99 27       	eor	r25, r25
     37e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <uart+0x8>
     382:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <Timer::count>
     386:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <uart+0x8>
     38a:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <uart+0x9>
     38e:	89 13       	cpse	r24, r25
     390:	ee cf       	rjmp	.-36     	; 0x36e <PigroProto::skip_trash()+0x28>
     392:	88 95       	sleep
     394:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Timer::count>
     398:	81 3a       	cpi	r24, 0xA1	; 161
     39a:	18 f3       	brcs	.-58     	; 0x362 <PigroProto::skip_trash()+0x1c>
     39c:	89 b7       	in	r24, 0x39	; 57
     39e:	8d 7f       	andi	r24, 0xFD	; 253
     3a0:	89 bf       	out	0x39, r24	; 57
     3a2:	13 be       	out	0x33, r1	; 51
     3a4:	08 95       	ret

000003a6 <STM32::set_ir(unsigned char)>:
     3a6:	28 2f       	mov	r18, r24
     3a8:	db 9a       	sbi	0x1b, 3	; 27
     3aa:	da 9a       	sbi	0x1b, 2	; 27
     3ac:	da 98       	cbi	0x1b, 2	; 27
     3ae:	da 9a       	sbi	0x1b, 2	; 27
     3b0:	da 98       	cbi	0x1b, 2	; 27
     3b2:	db 98       	cbi	0x1b, 3	; 27
     3b4:	da 9a       	sbi	0x1b, 2	; 27
     3b6:	da 98       	cbi	0x1b, 2	; 27
     3b8:	34 e0       	ldi	r19, 0x04	; 4
     3ba:	80 e0       	ldi	r24, 0x00	; 0
     3bc:	da 9a       	sbi	0x1b, 2	; 27
     3be:	da 98       	cbi	0x1b, 2	; 27
     3c0:	20 ff       	sbrs	r18, 0
     3c2:	23 c0       	rjmp	.+70     	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
     3c4:	d9 9a       	sbi	0x1b, 1	; 27
     3c6:	26 95       	lsr	r18
     3c8:	86 95       	lsr	r24
     3ca:	99 b3       	in	r25, 0x19	; 25
     3cc:	95 fb       	bst	r25, 5
     3ce:	99 27       	eor	r25, r25
     3d0:	90 f9       	bld	r25, 0
     3d2:	97 95       	ror	r25
     3d4:	99 27       	eor	r25, r25
     3d6:	97 95       	ror	r25
     3d8:	89 2b       	or	r24, r25
     3da:	31 50       	subi	r19, 0x01	; 1
     3dc:	79 f7       	brne	.-34     	; 0x3bc <STM32::set_ir(unsigned char)+0x16>
     3de:	25 e0       	ldi	r18, 0x05	; 5
     3e0:	9f ef       	ldi	r25, 0xFF	; 255
     3e2:	da 9a       	sbi	0x1b, 2	; 27
     3e4:	da 98       	cbi	0x1b, 2	; 27
     3e6:	90 ff       	sbrs	r25, 0
     3e8:	0e c0       	rjmp	.+28     	; 0x406 <__FUSE_REGION_LENGTH__+0x6>
     3ea:	d9 9a       	sbi	0x1b, 1	; 27
     3ec:	96 95       	lsr	r25
     3ee:	39 b3       	in	r19, 0x19	; 25
     3f0:	21 50       	subi	r18, 0x01	; 1
     3f2:	b9 f7       	brne	.-18     	; 0x3e2 <STM32::set_ir(unsigned char)+0x3c>
     3f4:	db 9a       	sbi	0x1b, 3	; 27
     3f6:	da 9a       	sbi	0x1b, 2	; 27
     3f8:	da 98       	cbi	0x1b, 2	; 27
     3fa:	d9 9a       	sbi	0x1b, 1	; 27
     3fc:	da 9a       	sbi	0x1b, 2	; 27
     3fe:	da 98       	cbi	0x1b, 2	; 27
     400:	82 95       	swap	r24
     402:	8f 70       	andi	r24, 0x0F	; 15
     404:	08 95       	ret
     406:	d9 98       	cbi	0x1b, 1	; 27
     408:	f1 cf       	rjmp	.-30     	; 0x3ec <STM32::set_ir(unsigned char)+0x46>
     40a:	d9 98       	cbi	0x1b, 1	; 27
     40c:	dc cf       	rjmp	.-72     	; 0x3c6 <STM32::set_ir(unsigned char)+0x20>

0000040e <unsigned char JTAG::transaction::shift_xr<(unsigned char)8>(unsigned char)>:
     40e:	28 2f       	mov	r18, r24
     410:	38 e0       	ldi	r19, 0x08	; 8
     412:	80 e0       	ldi	r24, 0x00	; 0
     414:	0d c0       	rjmp	.+26     	; 0x430 <unsigned char JTAG::transaction::shift_xr<(unsigned char)8>(unsigned char)+0x22>
     416:	d9 9a       	sbi	0x1b, 1	; 27
     418:	26 95       	lsr	r18
     41a:	86 95       	lsr	r24
     41c:	99 b3       	in	r25, 0x19	; 25
     41e:	95 fb       	bst	r25, 5
     420:	99 27       	eor	r25, r25
     422:	90 f9       	bld	r25, 0
     424:	97 95       	ror	r25
     426:	99 27       	eor	r25, r25
     428:	97 95       	ror	r25
     42a:	89 2b       	or	r24, r25
     42c:	31 50       	subi	r19, 0x01	; 1
     42e:	31 f0       	breq	.+12     	; 0x43c <unsigned char JTAG::transaction::shift_xr<(unsigned char)8>(unsigned char)+0x2e>
     430:	da 9a       	sbi	0x1b, 2	; 27
     432:	da 98       	cbi	0x1b, 2	; 27
     434:	20 fd       	sbrc	r18, 0
     436:	ef cf       	rjmp	.-34     	; 0x416 <unsigned char JTAG::transaction::shift_xr<(unsigned char)8>(unsigned char)+0x8>
     438:	d9 98       	cbi	0x1b, 1	; 27
     43a:	ee cf       	rjmp	.-36     	; 0x418 <unsigned char JTAG::transaction::shift_xr<(unsigned char)8>(unsigned char)+0xa>
     43c:	08 95       	ret

0000043e <JTAG::transaction::shift_ex(unsigned char*, unsigned char)>:
     43e:	ef 92       	push	r14
     440:	ff 92       	push	r15
     442:	0f 93       	push	r16
     444:	1f 93       	push	r17
     446:	cf 93       	push	r28
     448:	df 93       	push	r29
     44a:	7c 01       	movw	r14, r24
     44c:	c6 2f       	mov	r28, r22
     44e:	fc 01       	movw	r30, r24
     450:	20 81       	ld	r18, Z
     452:	69 30       	cpi	r22, 0x09	; 9
     454:	90 f1       	brcs	.+100    	; 0x4ba <__stack+0x5b>
     456:	d7 ef       	ldi	r29, 0xF7	; 247
     458:	d6 0f       	add	r29, r22
     45a:	d6 95       	lsr	r29
     45c:	d6 95       	lsr	r29
     45e:	d6 95       	lsr	r29
     460:	81 e0       	ldi	r24, 0x01	; 1
     462:	8d 0f       	add	r24, r29
     464:	87 01       	movw	r16, r14
     466:	08 0f       	add	r16, r24
     468:	11 1d       	adc	r17, r1
     46a:	f7 01       	movw	r30, r14
     46c:	80 81       	ld	r24, Z
     46e:	0e 94 07 02 	call	0x40e	; 0x40e <unsigned char JTAG::transaction::shift_xr<(unsigned char)8>(unsigned char)>
     472:	f7 01       	movw	r30, r14
     474:	81 93       	st	Z+, r24
     476:	7f 01       	movw	r14, r30
     478:	e0 17       	cp	r30, r16
     47a:	f1 07       	cpc	r31, r17
     47c:	b1 f7       	brne	.-20     	; 0x46a <__stack+0xb>
     47e:	c8 50       	subi	r28, 0x08	; 8
     480:	dd 0f       	add	r29, r29
     482:	dd 0f       	add	r29, r29
     484:	dd 0f       	add	r29, r29
     486:	9c 2f       	mov	r25, r28
     488:	9d 1b       	sub	r25, r29
     48a:	f8 01       	movw	r30, r16
     48c:	20 81       	ld	r18, Z
     48e:	39 2f       	mov	r19, r25
     490:	c0 e0       	ldi	r28, 0x00	; 0
     492:	0d c0       	rjmp	.+26     	; 0x4ae <__stack+0x4f>
     494:	d9 9a       	sbi	0x1b, 1	; 27
     496:	26 95       	lsr	r18
     498:	c6 95       	lsr	r28
     49a:	89 b3       	in	r24, 0x19	; 25
     49c:	85 fb       	bst	r24, 5
     49e:	88 27       	eor	r24, r24
     4a0:	80 f9       	bld	r24, 0
     4a2:	87 95       	ror	r24
     4a4:	88 27       	eor	r24, r24
     4a6:	87 95       	ror	r24
     4a8:	c8 2b       	or	r28, r24
     4aa:	31 50       	subi	r19, 0x01	; 1
     4ac:	61 f0       	breq	.+24     	; 0x4c6 <__stack+0x67>
     4ae:	da 9a       	sbi	0x1b, 2	; 27
     4b0:	da 98       	cbi	0x1b, 2	; 27
     4b2:	20 fd       	sbrc	r18, 0
     4b4:	ef cf       	rjmp	.-34     	; 0x494 <__stack+0x35>
     4b6:	d9 98       	cbi	0x1b, 1	; 27
     4b8:	ee cf       	rjmp	.-36     	; 0x496 <__stack+0x37>
     4ba:	8c 01       	movw	r16, r24
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	61 11       	cpse	r22, r1
     4c0:	0d c0       	rjmp	.+26     	; 0x4dc <__stack+0x7d>
     4c2:	c6 95       	lsr	r28
     4c4:	9f 5f       	subi	r25, 0xFF	; 255
     4c6:	98 30       	cpi	r25, 0x08	; 8
     4c8:	e1 f7       	brne	.-8      	; 0x4c2 <__stack+0x63>
     4ca:	f8 01       	movw	r30, r16
     4cc:	c0 83       	st	Z, r28
     4ce:	df 91       	pop	r29
     4d0:	cf 91       	pop	r28
     4d2:	1f 91       	pop	r17
     4d4:	0f 91       	pop	r16
     4d6:	ff 90       	pop	r15
     4d8:	ef 90       	pop	r14
     4da:	08 95       	ret
     4dc:	96 2f       	mov	r25, r22
     4de:	d7 cf       	rjmp	.-82     	; 0x48e <__stack+0x2f>

000004e0 <PigroService::cmd_jtag_raw_ir()>:
     4e0:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
     4e4:	82 30       	cpi	r24, 0x02	; 2
     4e6:	70 f0       	brcs	.+28     	; 0x504 <PigroService::cmd_jtag_raw_ir()+0x24>
     4e8:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
     4ec:	81 50       	subi	r24, 0x01	; 1
     4ee:	99 0b       	sbc	r25, r25
     4f0:	88 0f       	add	r24, r24
     4f2:	99 1f       	adc	r25, r25
     4f4:	88 0f       	add	r24, r24
     4f6:	99 1f       	adc	r25, r25
     4f8:	88 0f       	add	r24, r24
     4fa:	99 1f       	adc	r25, r25
     4fc:	68 17       	cp	r22, r24
     4fe:	19 06       	cpc	r1, r25
     500:	11 f0       	breq	.+4      	; 0x506 <PigroService::cmd_jtag_raw_ir()+0x26>
     502:	0c f0       	brlt	.+2      	; 0x506 <PigroService::cmd_jtag_raw_ir()+0x26>
     504:	08 95       	ret
     506:	db 9a       	sbi	0x1b, 3	; 27
     508:	da 9a       	sbi	0x1b, 2	; 27
     50a:	da 98       	cbi	0x1b, 2	; 27
     50c:	da 9a       	sbi	0x1b, 2	; 27
     50e:	da 98       	cbi	0x1b, 2	; 27
     510:	db 98       	cbi	0x1b, 3	; 27
     512:	da 9a       	sbi	0x1b, 2	; 27
     514:	da 98       	cbi	0x1b, 2	; 27
     516:	89 e6       	ldi	r24, 0x69	; 105
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	0e 94 1f 02 	call	0x43e	; 0x43e <JTAG::transaction::shift_ex(unsigned char*, unsigned char)>
     51e:	db 9a       	sbi	0x1b, 3	; 27
     520:	da 9a       	sbi	0x1b, 2	; 27
     522:	da 98       	cbi	0x1b, 2	; 27
     524:	d9 9a       	sbi	0x1b, 1	; 27
     526:	da 9a       	sbi	0x1b, 2	; 27
     528:	da 98       	cbi	0x1b, 2	; 27
     52a:	0c 94 1f 01 	jmp	0x23e	; 0x23e <PigroProto::send_packet()>

0000052e <PigroService::cmd_arm_raw_io()>:
     52e:	cf 93       	push	r28
     530:	df 93       	push	r29
     532:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
     536:	83 30       	cpi	r24, 0x03	; 3
     538:	70 f0       	brcs	.+28     	; 0x556 <PigroService::cmd_arm_raw_io()+0x28>
     53a:	c0 91 69 00 	lds	r28, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
     53e:	82 50       	subi	r24, 0x02	; 2
     540:	99 0b       	sbc	r25, r25
     542:	88 0f       	add	r24, r24
     544:	99 1f       	adc	r25, r25
     546:	88 0f       	add	r24, r24
     548:	99 1f       	adc	r25, r25
     54a:	88 0f       	add	r24, r24
     54c:	99 1f       	adc	r25, r25
     54e:	c8 17       	cp	r28, r24
     550:	19 06       	cpc	r1, r25
     552:	21 f0       	breq	.+8      	; 0x55c <PigroService::cmd_arm_raw_io()+0x2e>
     554:	1c f0       	brlt	.+6      	; 0x55c <PigroService::cmd_arm_raw_io()+0x2e>
     556:	df 91       	pop	r29
     558:	cf 91       	pop	r28
     55a:	08 95       	ret
     55c:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
     560:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <STM32::set_ir(unsigned char)>
     564:	d8 2f       	mov	r29, r24
     566:	db 9a       	sbi	0x1b, 3	; 27
     568:	da 9a       	sbi	0x1b, 2	; 27
     56a:	da 98       	cbi	0x1b, 2	; 27
     56c:	db 98       	cbi	0x1b, 3	; 27
     56e:	da 9a       	sbi	0x1b, 2	; 27
     570:	da 98       	cbi	0x1b, 2	; 27
     572:	6c 2f       	mov	r22, r28
     574:	8a e6       	ldi	r24, 0x6A	; 106
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	0e 94 1f 02 	call	0x43e	; 0x43e <JTAG::transaction::shift_ex(unsigned char*, unsigned char)>
     57c:	80 e0       	ldi	r24, 0x00	; 0
     57e:	0e 94 3e 00 	call	0x7c	; 0x7c <unsigned char JTAG::transaction::shift_xr<(unsigned char)1>(unsigned char) [clone .isra.0]>
     582:	db 9a       	sbi	0x1b, 3	; 27
     584:	da 9a       	sbi	0x1b, 2	; 27
     586:	da 98       	cbi	0x1b, 2	; 27
     588:	d9 9a       	sbi	0x1b, 1	; 27
     58a:	da 9a       	sbi	0x1b, 2	; 27
     58c:	da 98       	cbi	0x1b, 2	; 27
     58e:	d0 93 68 00 	sts	0x0068, r29	; 0x800068 <PigroProto::pkt+0x2>
     592:	df 91       	pop	r29
     594:	cf 91       	pop	r28
     596:	0c 94 1f 01 	jmp	0x23e	; 0x23e <PigroProto::send_packet()>

0000059a <STM32::set_xpacc_dr(unsigned char, unsigned long*)>:
     59a:	0f 93       	push	r16
     59c:	1f 93       	push	r17
     59e:	cf 93       	push	r28
     5a0:	8b 01       	movw	r16, r22
     5a2:	db 9a       	sbi	0x1b, 3	; 27
     5a4:	da 9a       	sbi	0x1b, 2	; 27
     5a6:	da 98       	cbi	0x1b, 2	; 27
     5a8:	db 98       	cbi	0x1b, 3	; 27
     5aa:	da 9a       	sbi	0x1b, 2	; 27
     5ac:	da 98       	cbi	0x1b, 2	; 27
     5ae:	86 95       	lsr	r24
     5b0:	23 e0       	ldi	r18, 0x03	; 3
     5b2:	c0 e0       	ldi	r28, 0x00	; 0
     5b4:	da 9a       	sbi	0x1b, 2	; 27
     5b6:	da 98       	cbi	0x1b, 2	; 27
     5b8:	80 ff       	sbrs	r24, 0
     5ba:	33 c0       	rjmp	.+102    	; 0x622 <STM32::set_xpacc_dr(unsigned char, unsigned long*)+0x88>
     5bc:	d9 9a       	sbi	0x1b, 1	; 27
     5be:	86 95       	lsr	r24
     5c0:	c6 95       	lsr	r28
     5c2:	99 b3       	in	r25, 0x19	; 25
     5c4:	95 fb       	bst	r25, 5
     5c6:	99 27       	eor	r25, r25
     5c8:	90 f9       	bld	r25, 0
     5ca:	97 95       	ror	r25
     5cc:	99 27       	eor	r25, r25
     5ce:	97 95       	ror	r25
     5d0:	c9 2b       	or	r28, r25
     5d2:	21 50       	subi	r18, 0x01	; 1
     5d4:	79 f7       	brne	.-34     	; 0x5b4 <STM32::set_xpacc_dr(unsigned char, unsigned long*)+0x1a>
     5d6:	f8 01       	movw	r30, r16
     5d8:	80 81       	ld	r24, Z
     5da:	0e 94 07 02 	call	0x40e	; 0x40e <unsigned char JTAG::transaction::shift_xr<(unsigned char)8>(unsigned char)>
     5de:	f8 01       	movw	r30, r16
     5e0:	80 83       	st	Z, r24
     5e2:	81 81       	ldd	r24, Z+1	; 0x01
     5e4:	0e 94 07 02 	call	0x40e	; 0x40e <unsigned char JTAG::transaction::shift_xr<(unsigned char)8>(unsigned char)>
     5e8:	f8 01       	movw	r30, r16
     5ea:	81 83       	std	Z+1, r24	; 0x01
     5ec:	82 81       	ldd	r24, Z+2	; 0x02
     5ee:	0e 94 07 02 	call	0x40e	; 0x40e <unsigned char JTAG::transaction::shift_xr<(unsigned char)8>(unsigned char)>
     5f2:	f8 01       	movw	r30, r16
     5f4:	82 83       	std	Z+2, r24	; 0x02
     5f6:	83 81       	ldd	r24, Z+3	; 0x03
     5f8:	0e 94 07 02 	call	0x40e	; 0x40e <unsigned char JTAG::transaction::shift_xr<(unsigned char)8>(unsigned char)>
     5fc:	f8 01       	movw	r30, r16
     5fe:	83 83       	std	Z+3, r24	; 0x03
     600:	80 e0       	ldi	r24, 0x00	; 0
     602:	0e 94 3e 00 	call	0x7c	; 0x7c <unsigned char JTAG::transaction::shift_xr<(unsigned char)1>(unsigned char) [clone .isra.0]>
     606:	db 9a       	sbi	0x1b, 3	; 27
     608:	da 9a       	sbi	0x1b, 2	; 27
     60a:	da 98       	cbi	0x1b, 2	; 27
     60c:	d9 9a       	sbi	0x1b, 1	; 27
     60e:	da 9a       	sbi	0x1b, 2	; 27
     610:	da 98       	cbi	0x1b, 2	; 27
     612:	8c 2f       	mov	r24, r28
     614:	82 95       	swap	r24
     616:	86 95       	lsr	r24
     618:	87 70       	andi	r24, 0x07	; 7
     61a:	cf 91       	pop	r28
     61c:	1f 91       	pop	r17
     61e:	0f 91       	pop	r16
     620:	08 95       	ret
     622:	d9 98       	cbi	0x1b, 1	; 27
     624:	cc cf       	rjmp	.-104    	; 0x5be <STM32::set_xpacc_dr(unsigned char, unsigned long*)+0x24>

00000626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>:
     626:	ef 92       	push	r14
     628:	ff 92       	push	r15
     62a:	1f 93       	push	r17
     62c:	cf 93       	push	r28
     62e:	df 93       	push	r29
     630:	00 d0       	rcall	.+0      	; 0x632 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0xc>
     632:	00 d0       	rcall	.+0      	; 0x634 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0xe>
     634:	cd b7       	in	r28, 0x3d	; 61
     636:	de b7       	in	r29, 0x3e	; 62
     638:	16 2f       	mov	r17, r22
     63a:	7a 01       	movw	r14, r20
     63c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <STM32::set_ir(unsigned char)>
     640:	81 30       	cpi	r24, 0x01	; 1
     642:	59 f0       	breq	.+22     	; 0x65a <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0x34>
     644:	80 e1       	ldi	r24, 0x10	; 16
     646:	0f 90       	pop	r0
     648:	0f 90       	pop	r0
     64a:	0f 90       	pop	r0
     64c:	0f 90       	pop	r0
     64e:	df 91       	pop	r29
     650:	cf 91       	pop	r28
     652:	1f 91       	pop	r17
     654:	ff 90       	pop	r15
     656:	ef 90       	pop	r14
     658:	08 95       	ret
     65a:	b7 01       	movw	r22, r14
     65c:	81 2f       	mov	r24, r17
     65e:	0e 94 cd 02 	call	0x59a	; 0x59a <STM32::set_xpacc_dr(unsigned char, unsigned long*)>
     662:	80 31       	cpi	r24, 0x10	; 16
     664:	79 f3       	breq	.-34     	; 0x644 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0x1e>
     666:	8a e0       	ldi	r24, 0x0A	; 10
     668:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <STM32::set_ir(unsigned char)>
     66c:	81 30       	cpi	r24, 0x01	; 1
     66e:	51 f7       	brne	.-44     	; 0x644 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0x1e>
     670:	b7 01       	movw	r22, r14
     672:	86 e0       	ldi	r24, 0x06	; 6
     674:	0e 94 cd 02 	call	0x59a	; 0x59a <STM32::set_xpacc_dr(unsigned char, unsigned long*)>
     678:	18 2f       	mov	r17, r24
     67a:	80 31       	cpi	r24, 0x10	; 16
     67c:	19 f3       	breq	.-58     	; 0x644 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0x1e>
     67e:	8a e0       	ldi	r24, 0x0A	; 10
     680:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <STM32::set_ir(unsigned char)>
     684:	81 30       	cpi	r24, 0x01	; 1
     686:	f1 f6       	brne	.-68     	; 0x644 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0x1e>
     688:	be 01       	movw	r22, r28
     68a:	6f 5f       	subi	r22, 0xFF	; 255
     68c:	7f 4f       	sbci	r23, 0xFF	; 255
     68e:	8e e0       	ldi	r24, 0x0E	; 14
     690:	0e 94 cd 02 	call	0x59a	; 0x59a <STM32::set_xpacc_dr(unsigned char, unsigned long*)>
     694:	80 31       	cpi	r24, 0x10	; 16
     696:	b1 f2       	breq	.-84     	; 0x644 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0x1e>
     698:	49 81       	ldd	r20, Y+1	; 0x01
     69a:	5a 81       	ldd	r21, Y+2	; 0x02
     69c:	6b 81       	ldd	r22, Y+3	; 0x03
     69e:	7c 81       	ldd	r23, Y+4	; 0x04
     6a0:	12 30       	cpi	r17, 0x02	; 2
     6a2:	41 f0       	breq	.+16     	; 0x6b4 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0x8e>
     6a4:	f7 01       	movw	r30, r14
     6a6:	40 83       	st	Z, r20
     6a8:	51 83       	std	Z+1, r21	; 0x01
     6aa:	62 83       	std	Z+2, r22	; 0x02
     6ac:	73 83       	std	Z+3, r23	; 0x03
     6ae:	81 2f       	mov	r24, r17
     6b0:	80 62       	ori	r24, 0x20	; 32
     6b2:	c9 cf       	rjmp	.-110    	; 0x646 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0x20>
     6b4:	82 30       	cpi	r24, 0x02	; 2
     6b6:	b1 f7       	brne	.-20     	; 0x6a4 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0x7e>
     6b8:	db 01       	movw	r26, r22
     6ba:	ca 01       	movw	r24, r20
     6bc:	82 73       	andi	r24, 0x32	; 50
     6be:	99 27       	eor	r25, r25
     6c0:	aa 27       	eor	r26, r26
     6c2:	bb 27       	eor	r27, r27
     6c4:	89 2b       	or	r24, r25
     6c6:	8a 2b       	or	r24, r26
     6c8:	8b 2b       	or	r24, r27
     6ca:	61 f7       	brne	.-40     	; 0x6a4 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0x7e>
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	bb cf       	rjmp	.-138    	; 0x646 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)+0x20>

000006d0 <STM32::write_mem16(unsigned long, unsigned int)>:
     6d0:	cf 92       	push	r12
     6d2:	df 92       	push	r13
     6d4:	ef 92       	push	r14
     6d6:	ff 92       	push	r15
     6d8:	0f 93       	push	r16
     6da:	1f 93       	push	r17
     6dc:	cf 93       	push	r28
     6de:	df 93       	push	r29
     6e0:	cd b7       	in	r28, 0x3d	; 61
     6e2:	de b7       	in	r29, 0x3e	; 62
     6e4:	28 97       	sbiw	r28, 0x08	; 8
     6e6:	0f b6       	in	r0, 0x3f	; 63
     6e8:	f8 94       	cli
     6ea:	de bf       	out	0x3e, r29	; 62
     6ec:	0f be       	out	0x3f, r0	; 63
     6ee:	cd bf       	out	0x3d, r28	; 61
     6f0:	f6 2e       	mov	r15, r22
     6f2:	c7 2e       	mov	r12, r23
     6f4:	d8 2e       	mov	r13, r24
     6f6:	e9 2e       	mov	r14, r25
     6f8:	8a 01       	movw	r16, r20
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	a0 e0       	ldi	r26, 0x00	; 0
     700:	b2 e2       	ldi	r27, 0x22	; 34
     702:	8d 83       	std	Y+5, r24	; 0x05
     704:	9e 83       	std	Y+6, r25	; 0x06
     706:	af 83       	std	Y+7, r26	; 0x07
     708:	b8 87       	std	Y+8, r27	; 0x08
     70a:	40 91 65 00 	lds	r20, 0x0065	; 0x800065 <STM32::memap>
     70e:	50 e0       	ldi	r21, 0x00	; 0
     710:	70 e0       	ldi	r23, 0x00	; 0
     712:	60 e0       	ldi	r22, 0x00	; 0
     714:	74 2f       	mov	r23, r20
     716:	66 27       	eor	r22, r22
     718:	55 27       	eor	r21, r21
     71a:	44 27       	eor	r20, r20
     71c:	49 83       	std	Y+1, r20	; 0x01
     71e:	5a 83       	std	Y+2, r21	; 0x02
     720:	6b 83       	std	Y+3, r22	; 0x03
     722:	7c 83       	std	Y+4, r23	; 0x04
     724:	ae 01       	movw	r20, r28
     726:	4f 5f       	subi	r20, 0xFF	; 255
     728:	5f 4f       	sbci	r21, 0xFF	; 255
     72a:	68 e0       	ldi	r22, 0x08	; 8
     72c:	8a e0       	ldi	r24, 0x0A	; 10
     72e:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     732:	88 23       	and	r24, r24
     734:	81 f0       	breq	.+32     	; 0x756 <STM32::write_mem16(unsigned long, unsigned int)+0x86>
     736:	80 64       	ori	r24, 0x40	; 64
     738:	28 96       	adiw	r28, 0x08	; 8
     73a:	0f b6       	in	r0, 0x3f	; 63
     73c:	f8 94       	cli
     73e:	de bf       	out	0x3e, r29	; 62
     740:	0f be       	out	0x3f, r0	; 63
     742:	cd bf       	out	0x3d, r28	; 61
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	1f 91       	pop	r17
     74a:	0f 91       	pop	r16
     74c:	ff 90       	pop	r15
     74e:	ef 90       	pop	r14
     750:	df 90       	pop	r13
     752:	cf 90       	pop	r12
     754:	08 95       	ret
     756:	ae 01       	movw	r20, r28
     758:	4b 5f       	subi	r20, 0xFB	; 251
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	60 e0       	ldi	r22, 0x00	; 0
     75e:	8b e0       	ldi	r24, 0x0B	; 11
     760:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     764:	81 11       	cpse	r24, r1
     766:	e8 cf       	rjmp	.-48     	; 0x738 <STM32::write_mem16(unsigned long, unsigned int)+0x68>
     768:	fd 82       	std	Y+5, r15	; 0x05
     76a:	ce 82       	std	Y+6, r12	; 0x06
     76c:	df 82       	std	Y+7, r13	; 0x07
     76e:	e8 86       	std	Y+8, r14	; 0x08
     770:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <STM32::memap>
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	b0 e0       	ldi	r27, 0x00	; 0
     778:	a0 e0       	ldi	r26, 0x00	; 0
     77a:	b8 2f       	mov	r27, r24
     77c:	aa 27       	eor	r26, r26
     77e:	99 27       	eor	r25, r25
     780:	88 27       	eor	r24, r24
     782:	89 83       	std	Y+1, r24	; 0x01
     784:	9a 83       	std	Y+2, r25	; 0x02
     786:	ab 83       	std	Y+3, r26	; 0x03
     788:	bc 83       	std	Y+4, r27	; 0x04
     78a:	ae 01       	movw	r20, r28
     78c:	4f 5f       	subi	r20, 0xFF	; 255
     78e:	5f 4f       	sbci	r21, 0xFF	; 255
     790:	68 e0       	ldi	r22, 0x08	; 8
     792:	8a e0       	ldi	r24, 0x0A	; 10
     794:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     798:	81 11       	cpse	r24, r1
     79a:	cd cf       	rjmp	.-102    	; 0x736 <STM32::write_mem16(unsigned long, unsigned int)+0x66>
     79c:	ae 01       	movw	r20, r28
     79e:	4b 5f       	subi	r20, 0xFB	; 251
     7a0:	5f 4f       	sbci	r21, 0xFF	; 255
     7a2:	64 e0       	ldi	r22, 0x04	; 4
     7a4:	8b e0       	ldi	r24, 0x0B	; 11
     7a6:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     7aa:	81 11       	cpse	r24, r1
     7ac:	c5 cf       	rjmp	.-118    	; 0x738 <STM32::write_mem16(unsigned long, unsigned int)+0x68>
     7ae:	30 e0       	ldi	r19, 0x00	; 0
     7b0:	20 e0       	ldi	r18, 0x00	; 0
     7b2:	f1 fe       	sbrs	r15, 1
     7b4:	03 c0       	rjmp	.+6      	; 0x7bc <STM32::write_mem16(unsigned long, unsigned int)+0xec>
     7b6:	98 01       	movw	r18, r16
     7b8:	11 27       	eor	r17, r17
     7ba:	00 27       	eor	r16, r16
     7bc:	0d 83       	std	Y+5, r16	; 0x05
     7be:	1e 83       	std	Y+6, r17	; 0x06
     7c0:	2f 83       	std	Y+7, r18	; 0x07
     7c2:	38 87       	std	Y+8, r19	; 0x08
     7c4:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <STM32::memap>
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	b0 e0       	ldi	r27, 0x00	; 0
     7cc:	a0 e0       	ldi	r26, 0x00	; 0
     7ce:	b8 2f       	mov	r27, r24
     7d0:	aa 27       	eor	r26, r26
     7d2:	99 27       	eor	r25, r25
     7d4:	88 27       	eor	r24, r24
     7d6:	89 83       	std	Y+1, r24	; 0x01
     7d8:	9a 83       	std	Y+2, r25	; 0x02
     7da:	ab 83       	std	Y+3, r26	; 0x03
     7dc:	bc 83       	std	Y+4, r27	; 0x04
     7de:	ae 01       	movw	r20, r28
     7e0:	4f 5f       	subi	r20, 0xFF	; 255
     7e2:	5f 4f       	sbci	r21, 0xFF	; 255
     7e4:	68 e0       	ldi	r22, 0x08	; 8
     7e6:	8a e0       	ldi	r24, 0x0A	; 10
     7e8:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     7ec:	81 11       	cpse	r24, r1
     7ee:	a3 cf       	rjmp	.-186    	; 0x736 <STM32::write_mem16(unsigned long, unsigned int)+0x66>
     7f0:	ae 01       	movw	r20, r28
     7f2:	4b 5f       	subi	r20, 0xFB	; 251
     7f4:	5f 4f       	sbci	r21, 0xFF	; 255
     7f6:	6c e0       	ldi	r22, 0x0C	; 12
     7f8:	8b e0       	ldi	r24, 0x0B	; 11
     7fa:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     7fe:	9c cf       	rjmp	.-200    	; 0x738 <STM32::write_mem16(unsigned long, unsigned int)+0x68>

00000800 <STM32::read_mem32(unsigned long, unsigned long&)>:
     800:	cf 92       	push	r12
     802:	df 92       	push	r13
     804:	ef 92       	push	r14
     806:	ff 92       	push	r15
     808:	0f 93       	push	r16
     80a:	1f 93       	push	r17
     80c:	cf 93       	push	r28
     80e:	df 93       	push	r29
     810:	cd b7       	in	r28, 0x3d	; 61
     812:	de b7       	in	r29, 0x3e	; 62
     814:	28 97       	sbiw	r28, 0x08	; 8
     816:	0f b6       	in	r0, 0x3f	; 63
     818:	f8 94       	cli
     81a:	de bf       	out	0x3e, r29	; 62
     81c:	0f be       	out	0x3f, r0	; 63
     81e:	cd bf       	out	0x3d, r28	; 61
     820:	6b 01       	movw	r12, r22
     822:	7c 01       	movw	r14, r24
     824:	8a 01       	movw	r16, r20
     826:	82 e0       	ldi	r24, 0x02	; 2
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	a0 e0       	ldi	r26, 0x00	; 0
     82c:	b2 e2       	ldi	r27, 0x22	; 34
     82e:	8d 83       	std	Y+5, r24	; 0x05
     830:	9e 83       	std	Y+6, r25	; 0x06
     832:	af 83       	std	Y+7, r26	; 0x07
     834:	b8 87       	std	Y+8, r27	; 0x08
     836:	40 91 65 00 	lds	r20, 0x0065	; 0x800065 <STM32::memap>
     83a:	50 e0       	ldi	r21, 0x00	; 0
     83c:	70 e0       	ldi	r23, 0x00	; 0
     83e:	60 e0       	ldi	r22, 0x00	; 0
     840:	74 2f       	mov	r23, r20
     842:	66 27       	eor	r22, r22
     844:	55 27       	eor	r21, r21
     846:	44 27       	eor	r20, r20
     848:	49 83       	std	Y+1, r20	; 0x01
     84a:	5a 83       	std	Y+2, r21	; 0x02
     84c:	6b 83       	std	Y+3, r22	; 0x03
     84e:	7c 83       	std	Y+4, r23	; 0x04
     850:	ae 01       	movw	r20, r28
     852:	4f 5f       	subi	r20, 0xFF	; 255
     854:	5f 4f       	sbci	r21, 0xFF	; 255
     856:	68 e0       	ldi	r22, 0x08	; 8
     858:	8a e0       	ldi	r24, 0x0A	; 10
     85a:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     85e:	88 23       	and	r24, r24
     860:	81 f0       	breq	.+32     	; 0x882 <STM32::read_mem32(unsigned long, unsigned long&)+0x82>
     862:	80 64       	ori	r24, 0x40	; 64
     864:	28 96       	adiw	r28, 0x08	; 8
     866:	0f b6       	in	r0, 0x3f	; 63
     868:	f8 94       	cli
     86a:	de bf       	out	0x3e, r29	; 62
     86c:	0f be       	out	0x3f, r0	; 63
     86e:	cd bf       	out	0x3d, r28	; 61
     870:	df 91       	pop	r29
     872:	cf 91       	pop	r28
     874:	1f 91       	pop	r17
     876:	0f 91       	pop	r16
     878:	ff 90       	pop	r15
     87a:	ef 90       	pop	r14
     87c:	df 90       	pop	r13
     87e:	cf 90       	pop	r12
     880:	08 95       	ret
     882:	ae 01       	movw	r20, r28
     884:	4b 5f       	subi	r20, 0xFB	; 251
     886:	5f 4f       	sbci	r21, 0xFF	; 255
     888:	60 e0       	ldi	r22, 0x00	; 0
     88a:	8b e0       	ldi	r24, 0x0B	; 11
     88c:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     890:	81 11       	cpse	r24, r1
     892:	e8 cf       	rjmp	.-48     	; 0x864 <STM32::read_mem32(unsigned long, unsigned long&)+0x64>
     894:	cd 82       	std	Y+5, r12	; 0x05
     896:	de 82       	std	Y+6, r13	; 0x06
     898:	ef 82       	std	Y+7, r14	; 0x07
     89a:	f8 86       	std	Y+8, r15	; 0x08
     89c:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <STM32::memap>
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	b0 e0       	ldi	r27, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b8 2f       	mov	r27, r24
     8a8:	aa 27       	eor	r26, r26
     8aa:	99 27       	eor	r25, r25
     8ac:	88 27       	eor	r24, r24
     8ae:	89 83       	std	Y+1, r24	; 0x01
     8b0:	9a 83       	std	Y+2, r25	; 0x02
     8b2:	ab 83       	std	Y+3, r26	; 0x03
     8b4:	bc 83       	std	Y+4, r27	; 0x04
     8b6:	ae 01       	movw	r20, r28
     8b8:	4f 5f       	subi	r20, 0xFF	; 255
     8ba:	5f 4f       	sbci	r21, 0xFF	; 255
     8bc:	68 e0       	ldi	r22, 0x08	; 8
     8be:	8a e0       	ldi	r24, 0x0A	; 10
     8c0:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     8c4:	81 11       	cpse	r24, r1
     8c6:	cd cf       	rjmp	.-102    	; 0x862 <STM32::read_mem32(unsigned long, unsigned long&)+0x62>
     8c8:	ae 01       	movw	r20, r28
     8ca:	4b 5f       	subi	r20, 0xFB	; 251
     8cc:	5f 4f       	sbci	r21, 0xFF	; 255
     8ce:	64 e0       	ldi	r22, 0x04	; 4
     8d0:	8b e0       	ldi	r24, 0x0B	; 11
     8d2:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     8d6:	81 11       	cpse	r24, r1
     8d8:	c5 cf       	rjmp	.-118    	; 0x864 <STM32::read_mem32(unsigned long, unsigned long&)+0x64>
     8da:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <STM32::memap>
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	b0 e0       	ldi	r27, 0x00	; 0
     8e2:	a0 e0       	ldi	r26, 0x00	; 0
     8e4:	b8 2f       	mov	r27, r24
     8e6:	aa 27       	eor	r26, r26
     8e8:	99 27       	eor	r25, r25
     8ea:	88 27       	eor	r24, r24
     8ec:	89 83       	std	Y+1, r24	; 0x01
     8ee:	9a 83       	std	Y+2, r25	; 0x02
     8f0:	ab 83       	std	Y+3, r26	; 0x03
     8f2:	bc 83       	std	Y+4, r27	; 0x04
     8f4:	ae 01       	movw	r20, r28
     8f6:	4f 5f       	subi	r20, 0xFF	; 255
     8f8:	5f 4f       	sbci	r21, 0xFF	; 255
     8fa:	68 e0       	ldi	r22, 0x08	; 8
     8fc:	8a e0       	ldi	r24, 0x0A	; 10
     8fe:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     902:	88 23       	and	r24, r24
     904:	51 f0       	breq	.+20     	; 0x91a <STM32::read_mem32(unsigned long, unsigned long&)+0x11a>
     906:	49 81       	ldd	r20, Y+1	; 0x01
     908:	5a 81       	ldd	r21, Y+2	; 0x02
     90a:	6b 81       	ldd	r22, Y+3	; 0x03
     90c:	7c 81       	ldd	r23, Y+4	; 0x04
     90e:	f8 01       	movw	r30, r16
     910:	40 83       	st	Z, r20
     912:	51 83       	std	Z+1, r21	; 0x01
     914:	62 83       	std	Z+2, r22	; 0x02
     916:	73 83       	std	Z+3, r23	; 0x03
     918:	a4 cf       	rjmp	.-184    	; 0x862 <STM32::read_mem32(unsigned long, unsigned long&)+0x62>
     91a:	a8 01       	movw	r20, r16
     91c:	6e e0       	ldi	r22, 0x0E	; 14
     91e:	8b e0       	ldi	r24, 0x0B	; 11
     920:	28 96       	adiw	r28, 0x08	; 8
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	f8 94       	cli
     926:	de bf       	out	0x3e, r29	; 62
     928:	0f be       	out	0x3f, r0	; 63
     92a:	cd bf       	out	0x3d, r28	; 61
     92c:	df 91       	pop	r29
     92e:	cf 91       	pop	r28
     930:	1f 91       	pop	r17
     932:	0f 91       	pop	r16
     934:	ff 90       	pop	r15
     936:	ef 90       	pop	r14
     938:	df 90       	pop	r13
     93a:	cf 90       	pop	r12
     93c:	0c 94 13 03 	jmp	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>

00000940 <STM32::write_mem32(unsigned long, unsigned long)>:
     940:	8f 92       	push	r8
     942:	9f 92       	push	r9
     944:	af 92       	push	r10
     946:	bf 92       	push	r11
     948:	cf 92       	push	r12
     94a:	df 92       	push	r13
     94c:	ef 92       	push	r14
     94e:	ff 92       	push	r15
     950:	0f 93       	push	r16
     952:	1f 93       	push	r17
     954:	cf 93       	push	r28
     956:	df 93       	push	r29
     958:	cd b7       	in	r28, 0x3d	; 61
     95a:	de b7       	in	r29, 0x3e	; 62
     95c:	28 97       	sbiw	r28, 0x08	; 8
     95e:	0f b6       	in	r0, 0x3f	; 63
     960:	f8 94       	cli
     962:	de bf       	out	0x3e, r29	; 62
     964:	0f be       	out	0x3f, r0	; 63
     966:	cd bf       	out	0x3d, r28	; 61
     968:	4b 01       	movw	r8, r22
     96a:	a8 2e       	mov	r10, r24
     96c:	f9 2e       	mov	r15, r25
     96e:	b2 2e       	mov	r11, r18
     970:	c3 2e       	mov	r12, r19
     972:	d4 2e       	mov	r13, r20
     974:	e5 2e       	mov	r14, r21
     976:	82 e0       	ldi	r24, 0x02	; 2
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	a0 e0       	ldi	r26, 0x00	; 0
     97c:	b2 e2       	ldi	r27, 0x22	; 34
     97e:	8d 83       	std	Y+5, r24	; 0x05
     980:	9e 83       	std	Y+6, r25	; 0x06
     982:	af 83       	std	Y+7, r26	; 0x07
     984:	b8 87       	std	Y+8, r27	; 0x08
     986:	00 91 65 00 	lds	r16, 0x0065	; 0x800065 <STM32::memap>
     98a:	10 e0       	ldi	r17, 0x00	; 0
     98c:	30 e0       	ldi	r19, 0x00	; 0
     98e:	20 e0       	ldi	r18, 0x00	; 0
     990:	30 2f       	mov	r19, r16
     992:	22 27       	eor	r18, r18
     994:	11 27       	eor	r17, r17
     996:	00 27       	eor	r16, r16
     998:	09 83       	std	Y+1, r16	; 0x01
     99a:	1a 83       	std	Y+2, r17	; 0x02
     99c:	2b 83       	std	Y+3, r18	; 0x03
     99e:	3c 83       	std	Y+4, r19	; 0x04
     9a0:	ae 01       	movw	r20, r28
     9a2:	4f 5f       	subi	r20, 0xFF	; 255
     9a4:	5f 4f       	sbci	r21, 0xFF	; 255
     9a6:	68 e0       	ldi	r22, 0x08	; 8
     9a8:	8a e0       	ldi	r24, 0x0A	; 10
     9aa:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     9ae:	88 23       	and	r24, r24
     9b0:	a1 f0       	breq	.+40     	; 0x9da <STM32::write_mem32(unsigned long, unsigned long)+0x9a>
     9b2:	80 64       	ori	r24, 0x40	; 64
     9b4:	28 96       	adiw	r28, 0x08	; 8
     9b6:	0f b6       	in	r0, 0x3f	; 63
     9b8:	f8 94       	cli
     9ba:	de bf       	out	0x3e, r29	; 62
     9bc:	0f be       	out	0x3f, r0	; 63
     9be:	cd bf       	out	0x3d, r28	; 61
     9c0:	df 91       	pop	r29
     9c2:	cf 91       	pop	r28
     9c4:	1f 91       	pop	r17
     9c6:	0f 91       	pop	r16
     9c8:	ff 90       	pop	r15
     9ca:	ef 90       	pop	r14
     9cc:	df 90       	pop	r13
     9ce:	cf 90       	pop	r12
     9d0:	bf 90       	pop	r11
     9d2:	af 90       	pop	r10
     9d4:	9f 90       	pop	r9
     9d6:	8f 90       	pop	r8
     9d8:	08 95       	ret
     9da:	ae 01       	movw	r20, r28
     9dc:	4b 5f       	subi	r20, 0xFB	; 251
     9de:	5f 4f       	sbci	r21, 0xFF	; 255
     9e0:	60 e0       	ldi	r22, 0x00	; 0
     9e2:	8b e0       	ldi	r24, 0x0B	; 11
     9e4:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     9e8:	81 11       	cpse	r24, r1
     9ea:	e4 cf       	rjmp	.-56     	; 0x9b4 <STM32::write_mem32(unsigned long, unsigned long)+0x74>
     9ec:	8d 82       	std	Y+5, r8	; 0x05
     9ee:	9e 82       	std	Y+6, r9	; 0x06
     9f0:	af 82       	std	Y+7, r10	; 0x07
     9f2:	f8 86       	std	Y+8, r15	; 0x08
     9f4:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <STM32::memap>
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	b0 e0       	ldi	r27, 0x00	; 0
     9fc:	a0 e0       	ldi	r26, 0x00	; 0
     9fe:	b8 2f       	mov	r27, r24
     a00:	aa 27       	eor	r26, r26
     a02:	99 27       	eor	r25, r25
     a04:	88 27       	eor	r24, r24
     a06:	89 83       	std	Y+1, r24	; 0x01
     a08:	9a 83       	std	Y+2, r25	; 0x02
     a0a:	ab 83       	std	Y+3, r26	; 0x03
     a0c:	bc 83       	std	Y+4, r27	; 0x04
     a0e:	ae 01       	movw	r20, r28
     a10:	4f 5f       	subi	r20, 0xFF	; 255
     a12:	5f 4f       	sbci	r21, 0xFF	; 255
     a14:	68 e0       	ldi	r22, 0x08	; 8
     a16:	8a e0       	ldi	r24, 0x0A	; 10
     a18:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     a1c:	81 11       	cpse	r24, r1
     a1e:	c9 cf       	rjmp	.-110    	; 0x9b2 <STM32::write_mem32(unsigned long, unsigned long)+0x72>
     a20:	ae 01       	movw	r20, r28
     a22:	4b 5f       	subi	r20, 0xFB	; 251
     a24:	5f 4f       	sbci	r21, 0xFF	; 255
     a26:	64 e0       	ldi	r22, 0x04	; 4
     a28:	8b e0       	ldi	r24, 0x0B	; 11
     a2a:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     a2e:	81 11       	cpse	r24, r1
     a30:	c1 cf       	rjmp	.-126    	; 0x9b4 <STM32::write_mem32(unsigned long, unsigned long)+0x74>
     a32:	bd 82       	std	Y+5, r11	; 0x05
     a34:	ce 82       	std	Y+6, r12	; 0x06
     a36:	df 82       	std	Y+7, r13	; 0x07
     a38:	e8 86       	std	Y+8, r14	; 0x08
     a3a:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <STM32::memap>
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	b0 e0       	ldi	r27, 0x00	; 0
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	b8 2f       	mov	r27, r24
     a46:	aa 27       	eor	r26, r26
     a48:	99 27       	eor	r25, r25
     a4a:	88 27       	eor	r24, r24
     a4c:	89 83       	std	Y+1, r24	; 0x01
     a4e:	9a 83       	std	Y+2, r25	; 0x02
     a50:	ab 83       	std	Y+3, r26	; 0x03
     a52:	bc 83       	std	Y+4, r27	; 0x04
     a54:	ae 01       	movw	r20, r28
     a56:	4f 5f       	subi	r20, 0xFF	; 255
     a58:	5f 4f       	sbci	r21, 0xFF	; 255
     a5a:	68 e0       	ldi	r22, 0x08	; 8
     a5c:	8a e0       	ldi	r24, 0x0A	; 10
     a5e:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     a62:	81 11       	cpse	r24, r1
     a64:	a6 cf       	rjmp	.-180    	; 0x9b2 <STM32::write_mem32(unsigned long, unsigned long)+0x72>
     a66:	ae 01       	movw	r20, r28
     a68:	4b 5f       	subi	r20, 0xFB	; 251
     a6a:	5f 4f       	sbci	r21, 0xFF	; 255
     a6c:	6c e0       	ldi	r22, 0x0C	; 12
     a6e:	8b e0       	ldi	r24, 0x0B	; 11
     a70:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     a74:	9f cf       	rjmp	.-194    	; 0x9b4 <STM32::write_mem32(unsigned long, unsigned long)+0x74>

00000a76 <STM32::program_flash(unsigned long, unsigned int)>:
     a76:	cf 92       	push	r12
     a78:	df 92       	push	r13
     a7a:	ef 92       	push	r14
     a7c:	ff 92       	push	r15
     a7e:	0f 93       	push	r16
     a80:	1f 93       	push	r17
     a82:	cf 93       	push	r28
     a84:	df 93       	push	r29
     a86:	00 d0       	rcall	.+0      	; 0xa88 <STM32::program_flash(unsigned long, unsigned int)+0x12>
     a88:	00 d0       	rcall	.+0      	; 0xa8a <STM32::program_flash(unsigned long, unsigned int)+0x14>
     a8a:	cd b7       	in	r28, 0x3d	; 61
     a8c:	de b7       	in	r29, 0x3e	; 62
     a8e:	7b 01       	movw	r14, r22
     a90:	8c 01       	movw	r16, r24
     a92:	6a 01       	movw	r12, r20
     a94:	24 e3       	ldi	r18, 0x34	; 52
     a96:	30 e0       	ldi	r19, 0x00	; 0
     a98:	40 e0       	ldi	r20, 0x00	; 0
     a9a:	50 e0       	ldi	r21, 0x00	; 0
     a9c:	6c e0       	ldi	r22, 0x0C	; 12
     a9e:	70 e2       	ldi	r23, 0x20	; 32
     aa0:	82 e0       	ldi	r24, 0x02	; 2
     aa2:	90 e4       	ldi	r25, 0x40	; 64
     aa4:	0e 94 a0 04 	call	0x940	; 0x940 <STM32::write_mem32(unsigned long, unsigned long)>
     aa8:	81 11       	cpse	r24, r1
     aaa:	25 c0       	rjmp	.+74     	; 0xaf6 <STM32::program_flash(unsigned long, unsigned int)+0x80>
     aac:	a6 01       	movw	r20, r12
     aae:	b7 01       	movw	r22, r14
     ab0:	c8 01       	movw	r24, r16
     ab2:	0e 94 68 03 	call	0x6d0	; 0x6d0 <STM32::write_mem16(unsigned long, unsigned int)>
     ab6:	81 11       	cpse	r24, r1
     ab8:	1e c0       	rjmp	.+60     	; 0xaf6 <STM32::program_flash(unsigned long, unsigned int)+0x80>
     aba:	ae 01       	movw	r20, r28
     abc:	4f 5f       	subi	r20, 0xFF	; 255
     abe:	5f 4f       	sbci	r21, 0xFF	; 255
     ac0:	6c e0       	ldi	r22, 0x0C	; 12
     ac2:	70 e2       	ldi	r23, 0x20	; 32
     ac4:	82 e0       	ldi	r24, 0x02	; 2
     ac6:	90 e4       	ldi	r25, 0x40	; 64
     ac8:	0e 94 00 04 	call	0x800	; 0x800 <STM32::read_mem32(unsigned long, unsigned long&)>
     acc:	81 11       	cpse	r24, r1
     ace:	23 c0       	rjmp	.+70     	; 0xb16 <STM32::program_flash(unsigned long, unsigned int)+0xa0>
     ad0:	49 81       	ldd	r20, Y+1	; 0x01
     ad2:	5a 81       	ldd	r21, Y+2	; 0x02
     ad4:	6b 81       	ldd	r22, Y+3	; 0x03
     ad6:	7c 81       	ldd	r23, Y+4	; 0x04
     ad8:	8a 01       	movw	r16, r20
     ada:	9b 01       	movw	r18, r22
     adc:	05 71       	andi	r16, 0x15	; 21
     ade:	11 27       	eor	r17, r17
     ae0:	22 27       	eor	r18, r18
     ae2:	33 27       	eor	r19, r19
     ae4:	01 2b       	or	r16, r17
     ae6:	02 2b       	or	r16, r18
     ae8:	03 2b       	or	r16, r19
     aea:	99 f4       	brne	.+38     	; 0xb12 <STM32::program_flash(unsigned long, unsigned int)+0x9c>
     aec:	45 fd       	sbrc	r20, 5
     aee:	04 c0       	rjmp	.+8      	; 0xaf8 <STM32::program_flash(unsigned long, unsigned int)+0x82>
     af0:	84 2f       	mov	r24, r20
     af2:	80 68       	ori	r24, 0x80	; 128
     af4:	01 c0       	rjmp	.+2      	; 0xaf8 <STM32::program_flash(unsigned long, unsigned int)+0x82>
     af6:	80 e8       	ldi	r24, 0x80	; 128
     af8:	0f 90       	pop	r0
     afa:	0f 90       	pop	r0
     afc:	0f 90       	pop	r0
     afe:	0f 90       	pop	r0
     b00:	df 91       	pop	r29
     b02:	cf 91       	pop	r28
     b04:	1f 91       	pop	r17
     b06:	0f 91       	pop	r16
     b08:	ff 90       	pop	r15
     b0a:	ef 90       	pop	r14
     b0c:	df 90       	pop	r13
     b0e:	cf 90       	pop	r12
     b10:	08 95       	ret
     b12:	84 2f       	mov	r24, r20
     b14:	f1 cf       	rjmp	.-30     	; 0xaf8 <STM32::program_flash(unsigned long, unsigned int)+0x82>
     b16:	80 e4       	ldi	r24, 0x40	; 64
     b18:	ef cf       	rjmp	.-34     	; 0xaf8 <STM32::program_flash(unsigned long, unsigned int)+0x82>

00000b1a <PigroService::cmd_arm_program_next()>:
     b1a:	0f 93       	push	r16
     b1c:	1f 93       	push	r17
     b1e:	cf 93       	push	r28
     b20:	df 93       	push	r29
     b22:	00 d0       	rcall	.+0      	; 0xb24 <PigroService::cmd_arm_program_next()+0xa>
     b24:	00 d0       	rcall	.+0      	; 0xb26 <PigroService::cmd_arm_program_next()+0xc>
     b26:	0f 92       	push	r0
     b28:	cd b7       	in	r28, 0x3d	; 61
     b2a:	de b7       	in	r29, 0x3e	; 62
     b2c:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
     b30:	84 30       	cpi	r24, 0x04	; 4
     b32:	51 f0       	breq	.+20     	; 0xb48 <PigroService::cmd_arm_program_next()+0x2e>
     b34:	0f 90       	pop	r0
     b36:	0f 90       	pop	r0
     b38:	0f 90       	pop	r0
     b3a:	0f 90       	pop	r0
     b3c:	0f 90       	pop	r0
     b3e:	df 91       	pop	r29
     b40:	cf 91       	pop	r28
     b42:	1f 91       	pop	r17
     b44:	0f 91       	pop	r16
     b46:	08 95       	ret
     b48:	00 91 6a 00 	lds	r16, 0x006A	; 0x80006a <PigroProto::pkt+0x4>
     b4c:	10 91 6b 00 	lds	r17, 0x006B	; 0x80006b <PigroProto::pkt+0x5>
     b50:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
     b54:	50 91 69 00 	lds	r21, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
     b58:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <STM32::mem_addr>
     b5c:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <STM32::mem_addr+0x1>
     b60:	a0 91 63 00 	lds	r26, 0x0063	; 0x800063 <STM32::mem_addr+0x2>
     b64:	b0 91 64 00 	lds	r27, 0x0064	; 0x800064 <STM32::mem_addr+0x3>
     b68:	bc 01       	movw	r22, r24
     b6a:	cd 01       	movw	r24, r26
     b6c:	0e 94 3b 05 	call	0xa76	; 0xa76 <STM32::program_flash(unsigned long, unsigned int)>
     b70:	8d 83       	std	Y+5, r24	; 0x05
     b72:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <STM32::mem_addr>
     b76:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <STM32::mem_addr+0x1>
     b7a:	a0 91 63 00 	lds	r26, 0x0063	; 0x800063 <STM32::mem_addr+0x2>
     b7e:	b0 91 64 00 	lds	r27, 0x0064	; 0x800064 <STM32::mem_addr+0x3>
     b82:	9c 01       	movw	r18, r24
     b84:	ad 01       	movw	r20, r26
     b86:	2e 5f       	subi	r18, 0xFE	; 254
     b88:	3f 4f       	sbci	r19, 0xFF	; 255
     b8a:	4f 4f       	sbci	r20, 0xFF	; 255
     b8c:	5f 4f       	sbci	r21, 0xFF	; 255
     b8e:	29 83       	std	Y+1, r18	; 0x01
     b90:	3a 83       	std	Y+2, r19	; 0x02
     b92:	4b 83       	std	Y+3, r20	; 0x03
     b94:	5c 83       	std	Y+4, r21	; 0x04
     b96:	a8 01       	movw	r20, r16
     b98:	69 81       	ldd	r22, Y+1	; 0x01
     b9a:	7a 81       	ldd	r23, Y+2	; 0x02
     b9c:	8b 81       	ldd	r24, Y+3	; 0x03
     b9e:	9c 81       	ldd	r25, Y+4	; 0x04
     ba0:	0e 94 3b 05 	call	0xa76	; 0xa76 <STM32::program_flash(unsigned long, unsigned int)>
     ba4:	40 91 61 00 	lds	r20, 0x0061	; 0x800061 <STM32::mem_addr>
     ba8:	50 91 62 00 	lds	r21, 0x0062	; 0x800062 <STM32::mem_addr+0x1>
     bac:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <STM32::mem_addr+0x2>
     bb0:	70 91 64 00 	lds	r23, 0x0064	; 0x800064 <STM32::mem_addr+0x3>
     bb4:	4c 5f       	subi	r20, 0xFC	; 252
     bb6:	5f 4f       	sbci	r21, 0xFF	; 255
     bb8:	6f 4f       	sbci	r22, 0xFF	; 255
     bba:	7f 4f       	sbci	r23, 0xFF	; 255
     bbc:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <STM32::mem_addr>
     bc0:	50 93 62 00 	sts	0x0062, r21	; 0x800062 <STM32::mem_addr+0x1>
     bc4:	60 93 63 00 	sts	0x0063, r22	; 0x800063 <STM32::mem_addr+0x2>
     bc8:	70 93 64 00 	sts	0x0064, r23	; 0x800064 <STM32::mem_addr+0x3>
     bcc:	9d 81       	ldd	r25, Y+5	; 0x05
     bce:	98 2b       	or	r25, r24
     bd0:	41 f0       	breq	.+16     	; 0xbe2 <PigroService::cmd_arm_program_next()+0xc8>
     bd2:	92 e0       	ldi	r25, 0x02	; 2
     bd4:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <PigroProto::pkt+0x1>
     bd8:	3d 81       	ldd	r19, Y+5	; 0x05
     bda:	30 93 68 00 	sts	0x0068, r19	; 0x800068 <PigroProto::pkt+0x2>
     bde:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <PigroProto::pkt+0x3>
     be2:	0f 90       	pop	r0
     be4:	0f 90       	pop	r0
     be6:	0f 90       	pop	r0
     be8:	0f 90       	pop	r0
     bea:	0f 90       	pop	r0
     bec:	df 91       	pop	r29
     bee:	cf 91       	pop	r28
     bf0:	1f 91       	pop	r17
     bf2:	0f 91       	pop	r16
     bf4:	0c 94 1f 01 	jmp	0x23e	; 0x23e <PigroProto::send_packet()>

00000bf8 <PigroService::cmd_arm_write_next()>:
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	00 d0       	rcall	.+0      	; 0xbfe <PigroService::cmd_arm_write_next()+0x6>
     bfe:	00 d0       	rcall	.+0      	; 0xc00 <PigroService::cmd_arm_write_next()+0x8>
     c00:	cd b7       	in	r28, 0x3d	; 61
     c02:	de b7       	in	r29, 0x3e	; 62
     c04:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
     c08:	84 30       	cpi	r24, 0x04	; 4
     c0a:	51 f0       	breq	.+20     	; 0xc20 <PigroService::cmd_arm_write_next()+0x28>
     c0c:	82 30       	cpi	r24, 0x02	; 2
     c0e:	09 f4       	brne	.+2      	; 0xc12 <PigroService::cmd_arm_write_next()+0x1a>
     c10:	42 c0       	rjmp	.+132    	; 0xc96 <PigroService::cmd_arm_write_next()+0x9e>
     c12:	0f 90       	pop	r0
     c14:	0f 90       	pop	r0
     c16:	0f 90       	pop	r0
     c18:	0f 90       	pop	r0
     c1a:	df 91       	pop	r29
     c1c:	cf 91       	pop	r28
     c1e:	08 95       	ret
     c20:	20 91 68 00 	lds	r18, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
     c24:	30 91 69 00 	lds	r19, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
     c28:	40 91 6a 00 	lds	r20, 0x006A	; 0x80006a <PigroProto::pkt+0x4>
     c2c:	50 91 6b 00 	lds	r21, 0x006B	; 0x80006b <PigroProto::pkt+0x5>
     c30:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <STM32::mem_addr>
     c34:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <STM32::mem_addr+0x1>
     c38:	a0 91 63 00 	lds	r26, 0x0063	; 0x800063 <STM32::mem_addr+0x2>
     c3c:	b0 91 64 00 	lds	r27, 0x0064	; 0x800064 <STM32::mem_addr+0x3>
     c40:	89 83       	std	Y+1, r24	; 0x01
     c42:	9a 83       	std	Y+2, r25	; 0x02
     c44:	ab 83       	std	Y+3, r26	; 0x03
     c46:	bc 83       	std	Y+4, r27	; 0x04
     c48:	bc 01       	movw	r22, r24
     c4a:	cd 01       	movw	r24, r26
     c4c:	0e 94 a0 04 	call	0x940	; 0x940 <STM32::write_mem32(unsigned long, unsigned long)>
     c50:	40 91 61 00 	lds	r20, 0x0061	; 0x800061 <STM32::mem_addr>
     c54:	50 91 62 00 	lds	r21, 0x0062	; 0x800062 <STM32::mem_addr+0x1>
     c58:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <STM32::mem_addr+0x2>
     c5c:	70 91 64 00 	lds	r23, 0x0064	; 0x800064 <STM32::mem_addr+0x3>
     c60:	4c 5f       	subi	r20, 0xFC	; 252
     c62:	5f 4f       	sbci	r21, 0xFF	; 255
     c64:	6f 4f       	sbci	r22, 0xFF	; 255
     c66:	7f 4f       	sbci	r23, 0xFF	; 255
     c68:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <STM32::mem_addr>
     c6c:	50 93 62 00 	sts	0x0062, r21	; 0x800062 <STM32::mem_addr+0x1>
     c70:	60 93 63 00 	sts	0x0063, r22	; 0x800063 <STM32::mem_addr+0x2>
     c74:	70 93 64 00 	sts	0x0064, r23	; 0x800064 <STM32::mem_addr+0x3>
     c78:	88 23       	and	r24, r24
     c7a:	29 f0       	breq	.+10     	; 0xc86 <PigroService::cmd_arm_write_next()+0x8e>
     c7c:	91 e0       	ldi	r25, 0x01	; 1
     c7e:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <PigroProto::pkt+0x1>
     c82:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <PigroProto::pkt+0x2>
     c86:	0f 90       	pop	r0
     c88:	0f 90       	pop	r0
     c8a:	0f 90       	pop	r0
     c8c:	0f 90       	pop	r0
     c8e:	df 91       	pop	r29
     c90:	cf 91       	pop	r28
     c92:	0c 94 1f 01 	jmp	0x23e	; 0x23e <PigroProto::send_packet()>
     c96:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
     c9a:	50 91 69 00 	lds	r21, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
     c9e:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <STM32::mem_addr>
     ca2:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <STM32::mem_addr+0x1>
     ca6:	a0 91 63 00 	lds	r26, 0x0063	; 0x800063 <STM32::mem_addr+0x2>
     caa:	b0 91 64 00 	lds	r27, 0x0064	; 0x800064 <STM32::mem_addr+0x3>
     cae:	89 83       	std	Y+1, r24	; 0x01
     cb0:	9a 83       	std	Y+2, r25	; 0x02
     cb2:	ab 83       	std	Y+3, r26	; 0x03
     cb4:	bc 83       	std	Y+4, r27	; 0x04
     cb6:	bc 01       	movw	r22, r24
     cb8:	cd 01       	movw	r24, r26
     cba:	0e 94 68 03 	call	0x6d0	; 0x6d0 <STM32::write_mem16(unsigned long, unsigned int)>
     cbe:	40 91 61 00 	lds	r20, 0x0061	; 0x800061 <STM32::mem_addr>
     cc2:	50 91 62 00 	lds	r21, 0x0062	; 0x800062 <STM32::mem_addr+0x1>
     cc6:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <STM32::mem_addr+0x2>
     cca:	70 91 64 00 	lds	r23, 0x0064	; 0x800064 <STM32::mem_addr+0x3>
     cce:	4e 5f       	subi	r20, 0xFE	; 254
     cd0:	5f 4f       	sbci	r21, 0xFF	; 255
     cd2:	6f 4f       	sbci	r22, 0xFF	; 255
     cd4:	7f 4f       	sbci	r23, 0xFF	; 255
     cd6:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <STM32::mem_addr>
     cda:	50 93 62 00 	sts	0x0062, r21	; 0x800062 <STM32::mem_addr+0x1>
     cde:	60 93 63 00 	sts	0x0063, r22	; 0x800063 <STM32::mem_addr+0x2>
     ce2:	70 93 64 00 	sts	0x0064, r23	; 0x800064 <STM32::mem_addr+0x3>
     ce6:	88 23       	and	r24, r24
     ce8:	71 f2       	breq	.-100    	; 0xc86 <PigroService::cmd_arm_write_next()+0x8e>
     cea:	c8 cf       	rjmp	.-112    	; 0xc7c <PigroService::cmd_arm_write_next()+0x84>

00000cec <PigroService::cmd_arm_write()>:
     cec:	cf 93       	push	r28
     cee:	df 93       	push	r29
     cf0:	00 d0       	rcall	.+0      	; 0xcf2 <PigroService::cmd_arm_write()+0x6>
     cf2:	00 d0       	rcall	.+0      	; 0xcf4 <PigroService::cmd_arm_write()+0x8>
     cf4:	cd b7       	in	r28, 0x3d	; 61
     cf6:	de b7       	in	r29, 0x3e	; 62
     cf8:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
     cfc:	88 30       	cpi	r24, 0x08	; 8
     cfe:	49 f0       	breq	.+18     	; 0xd12 <PigroService::cmd_arm_write()+0x26>
     d00:	86 30       	cpi	r24, 0x06	; 6
     d02:	71 f1       	breq	.+92     	; 0xd60 <PigroService::cmd_arm_write()+0x74>
     d04:	0f 90       	pop	r0
     d06:	0f 90       	pop	r0
     d08:	0f 90       	pop	r0
     d0a:	0f 90       	pop	r0
     d0c:	df 91       	pop	r29
     d0e:	cf 91       	pop	r28
     d10:	08 95       	ret
     d12:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <PigroProto::pkt+0x6>
     d16:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <PigroProto::pkt+0x7>
     d1a:	40 91 6e 00 	lds	r20, 0x006E	; 0x80006e <PigroProto::pkt+0x8>
     d1e:	50 91 6f 00 	lds	r21, 0x006F	; 0x80006f <PigroProto::pkt+0x9>
     d22:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
     d26:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
     d2a:	a0 91 6a 00 	lds	r26, 0x006A	; 0x80006a <PigroProto::pkt+0x4>
     d2e:	b0 91 6b 00 	lds	r27, 0x006B	; 0x80006b <PigroProto::pkt+0x5>
     d32:	89 83       	std	Y+1, r24	; 0x01
     d34:	9a 83       	std	Y+2, r25	; 0x02
     d36:	ab 83       	std	Y+3, r26	; 0x03
     d38:	bc 83       	std	Y+4, r27	; 0x04
     d3a:	bc 01       	movw	r22, r24
     d3c:	cd 01       	movw	r24, r26
     d3e:	0e 94 a0 04 	call	0x940	; 0x940 <STM32::write_mem32(unsigned long, unsigned long)>
     d42:	88 23       	and	r24, r24
     d44:	29 f0       	breq	.+10     	; 0xd50 <PigroService::cmd_arm_write()+0x64>
     d46:	91 e0       	ldi	r25, 0x01	; 1
     d48:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <PigroProto::pkt+0x1>
     d4c:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <PigroProto::pkt+0x2>
     d50:	0f 90       	pop	r0
     d52:	0f 90       	pop	r0
     d54:	0f 90       	pop	r0
     d56:	0f 90       	pop	r0
     d58:	df 91       	pop	r29
     d5a:	cf 91       	pop	r28
     d5c:	0c 94 1f 01 	jmp	0x23e	; 0x23e <PigroProto::send_packet()>
     d60:	40 91 6c 00 	lds	r20, 0x006C	; 0x80006c <PigroProto::pkt+0x6>
     d64:	50 91 6d 00 	lds	r21, 0x006D	; 0x80006d <PigroProto::pkt+0x7>
     d68:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
     d6c:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
     d70:	a0 91 6a 00 	lds	r26, 0x006A	; 0x80006a <PigroProto::pkt+0x4>
     d74:	b0 91 6b 00 	lds	r27, 0x006B	; 0x80006b <PigroProto::pkt+0x5>
     d78:	89 83       	std	Y+1, r24	; 0x01
     d7a:	9a 83       	std	Y+2, r25	; 0x02
     d7c:	ab 83       	std	Y+3, r26	; 0x03
     d7e:	bc 83       	std	Y+4, r27	; 0x04
     d80:	bc 01       	movw	r22, r24
     d82:	cd 01       	movw	r24, r26
     d84:	0e 94 68 03 	call	0x6d0	; 0x6d0 <STM32::write_mem16(unsigned long, unsigned int)>
     d88:	88 23       	and	r24, r24
     d8a:	11 f3       	breq	.-60     	; 0xd50 <PigroService::cmd_arm_write()+0x64>
     d8c:	dc cf       	rjmp	.-72     	; 0xd46 <PigroService::cmd_arm_write()+0x5a>

00000d8e <STM32::read_mem16(unsigned long, unsigned int&)>:
     d8e:	cf 92       	push	r12
     d90:	df 92       	push	r13
     d92:	ef 92       	push	r14
     d94:	ff 92       	push	r15
     d96:	0f 93       	push	r16
     d98:	1f 93       	push	r17
     d9a:	cf 93       	push	r28
     d9c:	df 93       	push	r29
     d9e:	cd b7       	in	r28, 0x3d	; 61
     da0:	de b7       	in	r29, 0x3e	; 62
     da2:	28 97       	sbiw	r28, 0x08	; 8
     da4:	0f b6       	in	r0, 0x3f	; 63
     da6:	f8 94       	cli
     da8:	de bf       	out	0x3e, r29	; 62
     daa:	0f be       	out	0x3f, r0	; 63
     dac:	cd bf       	out	0x3d, r28	; 61
     dae:	f6 2e       	mov	r15, r22
     db0:	c7 2e       	mov	r12, r23
     db2:	d8 2e       	mov	r13, r24
     db4:	e9 2e       	mov	r14, r25
     db6:	8a 01       	movw	r16, r20
     db8:	81 e0       	ldi	r24, 0x01	; 1
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	a0 e0       	ldi	r26, 0x00	; 0
     dbe:	b2 e2       	ldi	r27, 0x22	; 34
     dc0:	8d 83       	std	Y+5, r24	; 0x05
     dc2:	9e 83       	std	Y+6, r25	; 0x06
     dc4:	af 83       	std	Y+7, r26	; 0x07
     dc6:	b8 87       	std	Y+8, r27	; 0x08
     dc8:	40 91 65 00 	lds	r20, 0x0065	; 0x800065 <STM32::memap>
     dcc:	50 e0       	ldi	r21, 0x00	; 0
     dce:	70 e0       	ldi	r23, 0x00	; 0
     dd0:	60 e0       	ldi	r22, 0x00	; 0
     dd2:	74 2f       	mov	r23, r20
     dd4:	66 27       	eor	r22, r22
     dd6:	55 27       	eor	r21, r21
     dd8:	44 27       	eor	r20, r20
     dda:	49 83       	std	Y+1, r20	; 0x01
     ddc:	5a 83       	std	Y+2, r21	; 0x02
     dde:	6b 83       	std	Y+3, r22	; 0x03
     de0:	7c 83       	std	Y+4, r23	; 0x04
     de2:	ae 01       	movw	r20, r28
     de4:	4f 5f       	subi	r20, 0xFF	; 255
     de6:	5f 4f       	sbci	r21, 0xFF	; 255
     de8:	68 e0       	ldi	r22, 0x08	; 8
     dea:	8a e0       	ldi	r24, 0x0A	; 10
     dec:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     df0:	88 23       	and	r24, r24
     df2:	81 f0       	breq	.+32     	; 0xe14 <STM32::read_mem16(unsigned long, unsigned int&)+0x86>
     df4:	80 64       	ori	r24, 0x40	; 64
     df6:	28 96       	adiw	r28, 0x08	; 8
     df8:	0f b6       	in	r0, 0x3f	; 63
     dfa:	f8 94       	cli
     dfc:	de bf       	out	0x3e, r29	; 62
     dfe:	0f be       	out	0x3f, r0	; 63
     e00:	cd bf       	out	0x3d, r28	; 61
     e02:	df 91       	pop	r29
     e04:	cf 91       	pop	r28
     e06:	1f 91       	pop	r17
     e08:	0f 91       	pop	r16
     e0a:	ff 90       	pop	r15
     e0c:	ef 90       	pop	r14
     e0e:	df 90       	pop	r13
     e10:	cf 90       	pop	r12
     e12:	08 95       	ret
     e14:	ae 01       	movw	r20, r28
     e16:	4b 5f       	subi	r20, 0xFB	; 251
     e18:	5f 4f       	sbci	r21, 0xFF	; 255
     e1a:	60 e0       	ldi	r22, 0x00	; 0
     e1c:	8b e0       	ldi	r24, 0x0B	; 11
     e1e:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     e22:	81 11       	cpse	r24, r1
     e24:	e8 cf       	rjmp	.-48     	; 0xdf6 <STM32::read_mem16(unsigned long, unsigned int&)+0x68>
     e26:	fd 82       	std	Y+5, r15	; 0x05
     e28:	ce 82       	std	Y+6, r12	; 0x06
     e2a:	df 82       	std	Y+7, r13	; 0x07
     e2c:	e8 86       	std	Y+8, r14	; 0x08
     e2e:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <STM32::memap>
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	b0 e0       	ldi	r27, 0x00	; 0
     e36:	a0 e0       	ldi	r26, 0x00	; 0
     e38:	b8 2f       	mov	r27, r24
     e3a:	aa 27       	eor	r26, r26
     e3c:	99 27       	eor	r25, r25
     e3e:	88 27       	eor	r24, r24
     e40:	89 83       	std	Y+1, r24	; 0x01
     e42:	9a 83       	std	Y+2, r25	; 0x02
     e44:	ab 83       	std	Y+3, r26	; 0x03
     e46:	bc 83       	std	Y+4, r27	; 0x04
     e48:	ae 01       	movw	r20, r28
     e4a:	4f 5f       	subi	r20, 0xFF	; 255
     e4c:	5f 4f       	sbci	r21, 0xFF	; 255
     e4e:	68 e0       	ldi	r22, 0x08	; 8
     e50:	8a e0       	ldi	r24, 0x0A	; 10
     e52:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     e56:	81 11       	cpse	r24, r1
     e58:	cd cf       	rjmp	.-102    	; 0xdf4 <STM32::read_mem16(unsigned long, unsigned int&)+0x66>
     e5a:	ae 01       	movw	r20, r28
     e5c:	4b 5f       	subi	r20, 0xFB	; 251
     e5e:	5f 4f       	sbci	r21, 0xFF	; 255
     e60:	64 e0       	ldi	r22, 0x04	; 4
     e62:	8b e0       	ldi	r24, 0x0B	; 11
     e64:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     e68:	81 11       	cpse	r24, r1
     e6a:	c5 cf       	rjmp	.-118    	; 0xdf6 <STM32::read_mem16(unsigned long, unsigned int&)+0x68>
     e6c:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <STM32::memap>
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	b0 e0       	ldi	r27, 0x00	; 0
     e74:	a0 e0       	ldi	r26, 0x00	; 0
     e76:	b8 2f       	mov	r27, r24
     e78:	aa 27       	eor	r26, r26
     e7a:	99 27       	eor	r25, r25
     e7c:	88 27       	eor	r24, r24
     e7e:	89 83       	std	Y+1, r24	; 0x01
     e80:	9a 83       	std	Y+2, r25	; 0x02
     e82:	ab 83       	std	Y+3, r26	; 0x03
     e84:	bc 83       	std	Y+4, r27	; 0x04
     e86:	ae 01       	movw	r20, r28
     e88:	4f 5f       	subi	r20, 0xFF	; 255
     e8a:	5f 4f       	sbci	r21, 0xFF	; 255
     e8c:	68 e0       	ldi	r22, 0x08	; 8
     e8e:	8a e0       	ldi	r24, 0x0A	; 10
     e90:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     e94:	81 11       	cpse	r24, r1
     e96:	ae cf       	rjmp	.-164    	; 0xdf4 <STM32::read_mem16(unsigned long, unsigned int&)+0x66>
     e98:	ae 01       	movw	r20, r28
     e9a:	4b 5f       	subi	r20, 0xFB	; 251
     e9c:	5f 4f       	sbci	r21, 0xFF	; 255
     e9e:	6e e0       	ldi	r22, 0x0E	; 14
     ea0:	8b e0       	ldi	r24, 0x0B	; 11
     ea2:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
     ea6:	81 11       	cpse	r24, r1
     ea8:	a6 cf       	rjmp	.-180    	; 0xdf6 <STM32::read_mem16(unsigned long, unsigned int&)+0x68>
     eaa:	4d 81       	ldd	r20, Y+5	; 0x05
     eac:	5e 81       	ldd	r21, Y+6	; 0x06
     eae:	6f 81       	ldd	r22, Y+7	; 0x07
     eb0:	78 85       	ldd	r23, Y+8	; 0x08
     eb2:	f1 fc       	sbrc	r15, 1
     eb4:	ab 01       	movw	r20, r22
     eb6:	f8 01       	movw	r30, r16
     eb8:	51 83       	std	Z+1, r21	; 0x01
     eba:	40 83       	st	Z, r20
     ebc:	9c cf       	rjmp	.-200    	; 0xdf6 <STM32::read_mem16(unsigned long, unsigned int&)+0x68>

00000ebe <PigroService::cmd_arm_read_next()>:
     ebe:	cf 93       	push	r28
     ec0:	df 93       	push	r29
     ec2:	cd b7       	in	r28, 0x3d	; 61
     ec4:	de b7       	in	r29, 0x3e	; 62
     ec6:	28 97       	sbiw	r28, 0x08	; 8
     ec8:	0f b6       	in	r0, 0x3f	; 63
     eca:	f8 94       	cli
     ecc:	de bf       	out	0x3e, r29	; 62
     ece:	0f be       	out	0x3f, r0	; 63
     ed0:	cd bf       	out	0x3d, r28	; 61
     ed2:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
     ed6:	84 30       	cpi	r24, 0x04	; 4
     ed8:	61 f0       	breq	.+24     	; 0xef2 <PigroService::cmd_arm_read_next()+0x34>
     eda:	82 30       	cpi	r24, 0x02	; 2
     edc:	09 f4       	brne	.+2      	; 0xee0 <PigroService::cmd_arm_read_next()+0x22>
     ede:	45 c0       	rjmp	.+138    	; 0xf6a <PigroService::cmd_arm_read_next()+0xac>
     ee0:	28 96       	adiw	r28, 0x08	; 8
     ee2:	0f b6       	in	r0, 0x3f	; 63
     ee4:	f8 94       	cli
     ee6:	de bf       	out	0x3e, r29	; 62
     ee8:	0f be       	out	0x3f, r0	; 63
     eea:	cd bf       	out	0x3d, r28	; 61
     eec:	df 91       	pop	r29
     eee:	cf 91       	pop	r28
     ef0:	08 95       	ret
     ef2:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <STM32::mem_addr>
     ef6:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <STM32::mem_addr+0x1>
     efa:	a0 91 63 00 	lds	r26, 0x0063	; 0x800063 <STM32::mem_addr+0x2>
     efe:	b0 91 64 00 	lds	r27, 0x0064	; 0x800064 <STM32::mem_addr+0x3>
     f02:	ae 01       	movw	r20, r28
     f04:	4f 5f       	subi	r20, 0xFF	; 255
     f06:	5f 4f       	sbci	r21, 0xFF	; 255
     f08:	bc 01       	movw	r22, r24
     f0a:	cd 01       	movw	r24, r26
     f0c:	0e 94 00 04 	call	0x800	; 0x800 <STM32::read_mem32(unsigned long, unsigned long&)>
     f10:	40 91 61 00 	lds	r20, 0x0061	; 0x800061 <STM32::mem_addr>
     f14:	50 91 62 00 	lds	r21, 0x0062	; 0x800062 <STM32::mem_addr+0x1>
     f18:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <STM32::mem_addr+0x2>
     f1c:	70 91 64 00 	lds	r23, 0x0064	; 0x800064 <STM32::mem_addr+0x3>
     f20:	4c 5f       	subi	r20, 0xFC	; 252
     f22:	5f 4f       	sbci	r21, 0xFF	; 255
     f24:	6f 4f       	sbci	r22, 0xFF	; 255
     f26:	7f 4f       	sbci	r23, 0xFF	; 255
     f28:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <STM32::mem_addr>
     f2c:	50 93 62 00 	sts	0x0062, r21	; 0x800062 <STM32::mem_addr+0x1>
     f30:	60 93 63 00 	sts	0x0063, r22	; 0x800063 <STM32::mem_addr+0x2>
     f34:	70 93 64 00 	sts	0x0064, r23	; 0x800064 <STM32::mem_addr+0x3>
     f38:	88 23       	and	r24, r24
     f3a:	41 f0       	breq	.+16     	; 0xf4c <PigroService::cmd_arm_read_next()+0x8e>
     f3c:	91 e0       	ldi	r25, 0x01	; 1
     f3e:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <PigroProto::pkt+0x1>
     f42:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <PigroProto::pkt+0x2>
     f46:	0e 94 1f 01 	call	0x23e	; 0x23e <PigroProto::send_packet()>
     f4a:	ca cf       	rjmp	.-108    	; 0xee0 <PigroService::cmd_arm_read_next()+0x22>
     f4c:	89 81       	ldd	r24, Y+1	; 0x01
     f4e:	9a 81       	ldd	r25, Y+2	; 0x02
     f50:	ab 81       	ldd	r26, Y+3	; 0x03
     f52:	bc 81       	ldd	r27, Y+4	; 0x04
     f54:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <PigroProto::pkt+0x2>
     f58:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <PigroProto::pkt+0x3>
     f5c:	a0 93 6a 00 	sts	0x006A, r26	; 0x80006a <PigroProto::pkt+0x4>
     f60:	b0 93 6b 00 	sts	0x006B, r27	; 0x80006b <PigroProto::pkt+0x5>
     f64:	0e 94 1f 01 	call	0x23e	; 0x23e <PigroProto::send_packet()>
     f68:	bb cf       	rjmp	.-138    	; 0xee0 <PigroService::cmd_arm_read_next()+0x22>
     f6a:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <STM32::mem_addr>
     f6e:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <STM32::mem_addr+0x1>
     f72:	a0 91 63 00 	lds	r26, 0x0063	; 0x800063 <STM32::mem_addr+0x2>
     f76:	b0 91 64 00 	lds	r27, 0x0064	; 0x800064 <STM32::mem_addr+0x3>
     f7a:	ae 01       	movw	r20, r28
     f7c:	4f 5f       	subi	r20, 0xFF	; 255
     f7e:	5f 4f       	sbci	r21, 0xFF	; 255
     f80:	bc 01       	movw	r22, r24
     f82:	cd 01       	movw	r24, r26
     f84:	0e 94 c7 06 	call	0xd8e	; 0xd8e <STM32::read_mem16(unsigned long, unsigned int&)>
     f88:	40 91 61 00 	lds	r20, 0x0061	; 0x800061 <STM32::mem_addr>
     f8c:	50 91 62 00 	lds	r21, 0x0062	; 0x800062 <STM32::mem_addr+0x1>
     f90:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <STM32::mem_addr+0x2>
     f94:	70 91 64 00 	lds	r23, 0x0064	; 0x800064 <STM32::mem_addr+0x3>
     f98:	4e 5f       	subi	r20, 0xFE	; 254
     f9a:	5f 4f       	sbci	r21, 0xFF	; 255
     f9c:	6f 4f       	sbci	r22, 0xFF	; 255
     f9e:	7f 4f       	sbci	r23, 0xFF	; 255
     fa0:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <STM32::mem_addr>
     fa4:	50 93 62 00 	sts	0x0062, r21	; 0x800062 <STM32::mem_addr+0x1>
     fa8:	60 93 63 00 	sts	0x0063, r22	; 0x800063 <STM32::mem_addr+0x2>
     fac:	70 93 64 00 	sts	0x0064, r23	; 0x800064 <STM32::mem_addr+0x3>
     fb0:	81 11       	cpse	r24, r1
     fb2:	c4 cf       	rjmp	.-120    	; 0xf3c <PigroService::cmd_arm_read_next()+0x7e>
     fb4:	89 81       	ldd	r24, Y+1	; 0x01
     fb6:	9a 81       	ldd	r25, Y+2	; 0x02
     fb8:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <PigroProto::pkt+0x3>
     fbc:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <PigroProto::pkt+0x2>
     fc0:	0e 94 1f 01 	call	0x23e	; 0x23e <PigroProto::send_packet()>
     fc4:	8d cf       	rjmp	.-230    	; 0xee0 <PigroService::cmd_arm_read_next()+0x22>

00000fc6 <PigroService::cmd_arm_read()>:
     fc6:	cf 93       	push	r28
     fc8:	df 93       	push	r29
     fca:	cd b7       	in	r28, 0x3d	; 61
     fcc:	de b7       	in	r29, 0x3e	; 62
     fce:	28 97       	sbiw	r28, 0x08	; 8
     fd0:	0f b6       	in	r0, 0x3f	; 63
     fd2:	f8 94       	cli
     fd4:	de bf       	out	0x3e, r29	; 62
     fd6:	0f be       	out	0x3f, r0	; 63
     fd8:	cd bf       	out	0x3d, r28	; 61
     fda:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
     fde:	88 30       	cpi	r24, 0x08	; 8
     fe0:	59 f0       	breq	.+22     	; 0xff8 <PigroService::cmd_arm_read()+0x32>
     fe2:	86 30       	cpi	r24, 0x06	; 6
     fe4:	89 f1       	breq	.+98     	; 0x1048 <PigroService::cmd_arm_read()+0x82>
     fe6:	28 96       	adiw	r28, 0x08	; 8
     fe8:	0f b6       	in	r0, 0x3f	; 63
     fea:	f8 94       	cli
     fec:	de bf       	out	0x3e, r29	; 62
     fee:	0f be       	out	0x3f, r0	; 63
     ff0:	cd bf       	out	0x3d, r28	; 61
     ff2:	df 91       	pop	r29
     ff4:	cf 91       	pop	r28
     ff6:	08 95       	ret
     ff8:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
     ffc:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
    1000:	a0 91 6a 00 	lds	r26, 0x006A	; 0x80006a <PigroProto::pkt+0x4>
    1004:	b0 91 6b 00 	lds	r27, 0x006B	; 0x80006b <PigroProto::pkt+0x5>
    1008:	ae 01       	movw	r20, r28
    100a:	4f 5f       	subi	r20, 0xFF	; 255
    100c:	5f 4f       	sbci	r21, 0xFF	; 255
    100e:	bc 01       	movw	r22, r24
    1010:	cd 01       	movw	r24, r26
    1012:	0e 94 00 04 	call	0x800	; 0x800 <STM32::read_mem32(unsigned long, unsigned long&)>
    1016:	88 23       	and	r24, r24
    1018:	41 f0       	breq	.+16     	; 0x102a <PigroService::cmd_arm_read()+0x64>
    101a:	91 e0       	ldi	r25, 0x01	; 1
    101c:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <PigroProto::pkt+0x1>
    1020:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <PigroProto::pkt+0x2>
    1024:	0e 94 1f 01 	call	0x23e	; 0x23e <PigroProto::send_packet()>
    1028:	de cf       	rjmp	.-68     	; 0xfe6 <PigroService::cmd_arm_read()+0x20>
    102a:	89 81       	ldd	r24, Y+1	; 0x01
    102c:	9a 81       	ldd	r25, Y+2	; 0x02
    102e:	ab 81       	ldd	r26, Y+3	; 0x03
    1030:	bc 81       	ldd	r27, Y+4	; 0x04
    1032:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <PigroProto::pkt+0x6>
    1036:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <PigroProto::pkt+0x7>
    103a:	a0 93 6e 00 	sts	0x006E, r26	; 0x80006e <PigroProto::pkt+0x8>
    103e:	b0 93 6f 00 	sts	0x006F, r27	; 0x80006f <PigroProto::pkt+0x9>
    1042:	0e 94 1f 01 	call	0x23e	; 0x23e <PigroProto::send_packet()>
    1046:	cf cf       	rjmp	.-98     	; 0xfe6 <PigroService::cmd_arm_read()+0x20>
    1048:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
    104c:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
    1050:	a0 91 6a 00 	lds	r26, 0x006A	; 0x80006a <PigroProto::pkt+0x4>
    1054:	b0 91 6b 00 	lds	r27, 0x006B	; 0x80006b <PigroProto::pkt+0x5>
    1058:	ae 01       	movw	r20, r28
    105a:	4f 5f       	subi	r20, 0xFF	; 255
    105c:	5f 4f       	sbci	r21, 0xFF	; 255
    105e:	bc 01       	movw	r22, r24
    1060:	cd 01       	movw	r24, r26
    1062:	0e 94 c7 06 	call	0xd8e	; 0xd8e <STM32::read_mem16(unsigned long, unsigned int&)>
    1066:	81 11       	cpse	r24, r1
    1068:	d8 cf       	rjmp	.-80     	; 0x101a <PigroService::cmd_arm_read()+0x54>
    106a:	89 81       	ldd	r24, Y+1	; 0x01
    106c:	9a 81       	ldd	r25, Y+2	; 0x02
    106e:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <PigroProto::pkt+0x7>
    1072:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <PigroProto::pkt+0x6>
    1076:	0e 94 1f 01 	call	0x23e	; 0x23e <PigroProto::send_packet()>
    107a:	b5 cf       	rjmp	.-150    	; 0xfe6 <PigroService::cmd_arm_read()+0x20>

0000107c <PigroService::handle_packet()>:
    107c:	1f 93       	push	r17
    107e:	cf 93       	push	r28
    1080:	df 93       	push	r29
    1082:	00 d0       	rcall	.+0      	; 0x1084 <PigroService::handle_packet()+0x8>
    1084:	00 d0       	rcall	.+0      	; 0x1086 <PigroService::handle_packet()+0xa>
    1086:	cd b7       	in	r28, 0x3d	; 61
    1088:	de b7       	in	r29, 0x3e	; 62
    108a:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <PigroProto::pkt>
    108e:	e1 50       	subi	r30, 0x01	; 1
    1090:	e0 31       	cpi	r30, 0x10	; 16
    1092:	50 f4       	brcc	.+20     	; 0x10a8 <PigroService::handle_packet()+0x2c>
    1094:	f0 e0       	ldi	r31, 0x00	; 0
    1096:	e0 52       	subi	r30, 0x20	; 32
    1098:	f6 4f       	sbci	r31, 0xF6	; 246
    109a:	0c 94 d8 09 	jmp	0x13b0	; 0x13b0 <__tablejump2__>
    109e:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
    10a2:	82 30       	cpi	r24, 0x02	; 2
    10a4:	09 f4       	brne	.+2      	; 0x10a8 <PigroService::handle_packet()+0x2c>
    10a6:	19 c1       	rjmp	.+562    	; 0x12da <PigroService::handle_packet()+0x25e>
    10a8:	0f 90       	pop	r0
    10aa:	0f 90       	pop	r0
    10ac:	0f 90       	pop	r0
    10ae:	0f 90       	pop	r0
    10b0:	df 91       	pop	r29
    10b2:	cf 91       	pop	r28
    10b4:	1f 91       	pop	r17
    10b6:	08 95       	ret
    10b8:	0f 90       	pop	r0
    10ba:	0f 90       	pop	r0
    10bc:	0f 90       	pop	r0
    10be:	0f 90       	pop	r0
    10c0:	df 91       	pop	r29
    10c2:	cf 91       	pop	r28
    10c4:	1f 91       	pop	r17
    10c6:	0c 94 76 06 	jmp	0xcec	; 0xcec <PigroService::cmd_arm_write()>
    10ca:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
    10ce:	81 30       	cpi	r24, 0x01	; 1
    10d0:	59 f7       	brne	.-42     	; 0x10a8 <PigroService::handle_packet()+0x2c>
    10d2:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
    10d6:	88 23       	and	r24, r24
    10d8:	09 f4       	brne	.+2      	; 0x10dc <PigroService::handle_packet()+0x60>
    10da:	0c c1       	rjmp	.+536    	; 0x12f4 <PigroService::handle_packet()+0x278>
    10dc:	c1 9a       	sbi	0x18, 1	; 24
    10de:	e4 cf       	rjmp	.-56     	; 0x10a8 <PigroService::handle_packet()+0x2c>
    10e0:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
    10e4:	84 30       	cpi	r24, 0x04	; 4
    10e6:	01 f7       	brne	.-64     	; 0x10a8 <PigroService::handle_packet()+0x2c>
    10e8:	e8 e6       	ldi	r30, 0x68	; 104
    10ea:	f0 e0       	ldi	r31, 0x00	; 0
    10ec:	91 e0       	ldi	r25, 0x01	; 1
    10ee:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <spi>
    10f2:	81 91       	ld	r24, Z+
    10f4:	8f b9       	out	0x0f, r24	; 15
    10f6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <spi>
    10fa:	88 23       	and	r24, r24
    10fc:	29 f0       	breq	.+10     	; 0x1108 <PigroService::handle_packet()+0x8c>
    10fe:	88 95       	sleep
    1100:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <spi>
    1104:	81 11       	cpse	r24, r1
    1106:	fb cf       	rjmp	.-10     	; 0x10fe <PigroService::handle_packet()+0x82>
    1108:	8f b1       	in	r24, 0x0f	; 15
    110a:	df 01       	movw	r26, r30
    110c:	11 97       	sbiw	r26, 0x01	; 1
    110e:	8c 93       	st	X, r24
    1110:	80 e0       	ldi	r24, 0x00	; 0
    1112:	ec 36       	cpi	r30, 0x6C	; 108
    1114:	f8 07       	cpc	r31, r24
    1116:	59 f7       	brne	.-42     	; 0x10ee <PigroService::handle_packet()+0x72>
    1118:	42 c0       	rjmp	.+132    	; 0x119e <PigroService::handle_packet()+0x122>
    111a:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
    111e:	81 30       	cpi	r24, 0x01	; 1
    1120:	19 f6       	brne	.-122    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    1122:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
    1126:	81 30       	cpi	r24, 0x01	; 1
    1128:	09 f4       	brne	.+2      	; 0x112c <PigroService::handle_packet()+0xb0>
    112a:	e8 c0       	rjmp	.+464    	; 0x12fc <PigroService::handle_packet()+0x280>
    112c:	82 30       	cpi	r24, 0x02	; 2
    112e:	09 f4       	brne	.+2      	; 0x1132 <PigroService::handle_packet()+0xb6>
    1130:	e3 c0       	rjmp	.+454    	; 0x12f8 <PigroService::handle_packet()+0x27c>
    1132:	81 11       	cpse	r24, r1
    1134:	b9 cf       	rjmp	.-142    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    1136:	8b e0       	ldi	r24, 0x0B	; 11
    1138:	8b bb       	out	0x1b, r24	; 27
    113a:	dc 9a       	sbi	0x1b, 4	; 27
    113c:	db 98       	cbi	0x1b, 3	; 27
    113e:	da 9a       	sbi	0x1b, 2	; 27
    1140:	da 98       	cbi	0x1b, 2	; 27
    1142:	b2 cf       	rjmp	.-156    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    1144:	0f 90       	pop	r0
    1146:	0f 90       	pop	r0
    1148:	0f 90       	pop	r0
    114a:	0f 90       	pop	r0
    114c:	df 91       	pop	r29
    114e:	cf 91       	pop	r28
    1150:	1f 91       	pop	r17
    1152:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <PigroService::cmd_jtag_raw_ir()>
    1156:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
    115a:	82 30       	cpi	r24, 0x02	; 2
    115c:	08 f4       	brcc	.+2      	; 0x1160 <PigroService::handle_packet()+0xe4>
    115e:	a4 cf       	rjmp	.-184    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    1160:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
    1164:	81 50       	subi	r24, 0x01	; 1
    1166:	99 0b       	sbc	r25, r25
    1168:	88 0f       	add	r24, r24
    116a:	99 1f       	adc	r25, r25
    116c:	88 0f       	add	r24, r24
    116e:	99 1f       	adc	r25, r25
    1170:	88 0f       	add	r24, r24
    1172:	99 1f       	adc	r25, r25
    1174:	68 17       	cp	r22, r24
    1176:	19 06       	cpc	r1, r25
    1178:	11 f0       	breq	.+4      	; 0x117e <PigroService::handle_packet()+0x102>
    117a:	0c f0       	brlt	.+2      	; 0x117e <PigroService::handle_packet()+0x102>
    117c:	95 cf       	rjmp	.-214    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    117e:	db 9a       	sbi	0x1b, 3	; 27
    1180:	da 9a       	sbi	0x1b, 2	; 27
    1182:	da 98       	cbi	0x1b, 2	; 27
    1184:	db 98       	cbi	0x1b, 3	; 27
    1186:	da 9a       	sbi	0x1b, 2	; 27
    1188:	da 98       	cbi	0x1b, 2	; 27
    118a:	89 e6       	ldi	r24, 0x69	; 105
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	0e 94 1f 02 	call	0x43e	; 0x43e <JTAG::transaction::shift_ex(unsigned char*, unsigned char)>
    1192:	db 9a       	sbi	0x1b, 3	; 27
    1194:	da 9a       	sbi	0x1b, 2	; 27
    1196:	da 98       	cbi	0x1b, 2	; 27
    1198:	d9 9a       	sbi	0x1b, 1	; 27
    119a:	da 9a       	sbi	0x1b, 2	; 27
    119c:	da 98       	cbi	0x1b, 2	; 27
    119e:	0f 90       	pop	r0
    11a0:	0f 90       	pop	r0
    11a2:	0f 90       	pop	r0
    11a4:	0f 90       	pop	r0
    11a6:	df 91       	pop	r29
    11a8:	cf 91       	pop	r28
    11aa:	1f 91       	pop	r17
    11ac:	0c 94 1f 01 	jmp	0x23e	; 0x23e <PigroProto::send_packet()>
    11b0:	0f 90       	pop	r0
    11b2:	0f 90       	pop	r0
    11b4:	0f 90       	pop	r0
    11b6:	0f 90       	pop	r0
    11b8:	df 91       	pop	r29
    11ba:	cf 91       	pop	r28
    11bc:	1f 91       	pop	r17
    11be:	0c 94 97 02 	jmp	0x52e	; 0x52e <PigroService::cmd_arm_raw_io()>
    11c2:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
    11c6:	86 30       	cpi	r24, 0x06	; 6
    11c8:	09 f0       	breq	.+2      	; 0x11cc <PigroService::handle_packet()+0x150>
    11ca:	6e cf       	rjmp	.-292    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    11cc:	4a e6       	ldi	r20, 0x6A	; 106
    11ce:	50 e0       	ldi	r21, 0x00	; 0
    11d0:	60 91 69 00 	lds	r22, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
    11d4:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
    11d8:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
    11dc:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <PigroProto::pkt+0x3>
    11e0:	de cf       	rjmp	.-68     	; 0x119e <PigroService::handle_packet()+0x122>
    11e2:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
    11e6:	86 30       	cpi	r24, 0x06	; 6
    11e8:	09 f0       	breq	.+2      	; 0x11ec <PigroService::handle_packet()+0x170>
    11ea:	5e cf       	rjmp	.-324    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    11ec:	10 91 69 00 	lds	r17, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
    11f0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	b0 e0       	ldi	r27, 0x00	; 0
    11f8:	a0 e0       	ldi	r26, 0x00	; 0
    11fa:	b8 2f       	mov	r27, r24
    11fc:	aa 27       	eor	r26, r26
    11fe:	99 27       	eor	r25, r25
    1200:	88 27       	eor	r24, r24
    1202:	21 2f       	mov	r18, r17
    1204:	20 7f       	andi	r18, 0xF0	; 240
    1206:	82 2b       	or	r24, r18
    1208:	89 83       	std	Y+1, r24	; 0x01
    120a:	9a 83       	std	Y+2, r25	; 0x02
    120c:	ab 83       	std	Y+3, r26	; 0x03
    120e:	bc 83       	std	Y+4, r27	; 0x04
    1210:	ae 01       	movw	r20, r28
    1212:	4f 5f       	subi	r20, 0xFF	; 255
    1214:	5f 4f       	sbci	r21, 0xFF	; 255
    1216:	68 e0       	ldi	r22, 0x08	; 8
    1218:	8a e0       	ldi	r24, 0x0A	; 10
    121a:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
    121e:	88 23       	and	r24, r24
    1220:	09 f4       	brne	.+2      	; 0x1224 <PigroService::handle_packet()+0x1a8>
    1222:	61 c0       	rjmp	.+194    	; 0x12e6 <PigroService::handle_packet()+0x26a>
    1224:	49 81       	ldd	r20, Y+1	; 0x01
    1226:	5a 81       	ldd	r21, Y+2	; 0x02
    1228:	6b 81       	ldd	r22, Y+3	; 0x03
    122a:	7c 81       	ldd	r23, Y+4	; 0x04
    122c:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <PigroProto::pkt+0x4>
    1230:	50 93 6b 00 	sts	0x006B, r21	; 0x80006b <PigroProto::pkt+0x5>
    1234:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <PigroProto::pkt+0x6>
    1238:	70 93 6d 00 	sts	0x006D, r23	; 0x80006d <PigroProto::pkt+0x7>
    123c:	80 64       	ori	r24, 0x40	; 64
    123e:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <PigroProto::pkt+0x3>
    1242:	ad cf       	rjmp	.-166    	; 0x119e <PigroService::handle_packet()+0x122>
    1244:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <PigroProto::pkt+0x1>
    1248:	82 30       	cpi	r24, 0x02	; 2
    124a:	e9 f1       	breq	.+122    	; 0x12c6 <PigroService::handle_packet()+0x24a>
    124c:	85 30       	cpi	r24, 0x05	; 5
    124e:	09 f0       	breq	.+2      	; 0x1252 <PigroService::handle_packet()+0x1d6>
    1250:	2b cf       	rjmp	.-426    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    1252:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
    1256:	82 30       	cpi	r24, 0x02	; 2
    1258:	09 f0       	breq	.+2      	; 0x125c <PigroService::handle_packet()+0x1e0>
    125a:	26 cf       	rjmp	.-436    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    125c:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
    1260:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <PigroProto::pkt+0x4>
    1264:	a0 91 6b 00 	lds	r26, 0x006B	; 0x80006b <PigroProto::pkt+0x5>
    1268:	b0 91 6c 00 	lds	r27, 0x006C	; 0x80006c <PigroProto::pkt+0x6>
    126c:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <STM32::mem_addr>
    1270:	90 93 62 00 	sts	0x0062, r25	; 0x800062 <STM32::mem_addr+0x1>
    1274:	a0 93 63 00 	sts	0x0063, r26	; 0x800063 <STM32::mem_addr+0x2>
    1278:	b0 93 64 00 	sts	0x0064, r27	; 0x800064 <STM32::mem_addr+0x3>
    127c:	90 cf       	rjmp	.-224    	; 0x119e <PigroService::handle_packet()+0x122>
    127e:	0f 90       	pop	r0
    1280:	0f 90       	pop	r0
    1282:	0f 90       	pop	r0
    1284:	0f 90       	pop	r0
    1286:	df 91       	pop	r29
    1288:	cf 91       	pop	r28
    128a:	1f 91       	pop	r17
    128c:	0c 94 5f 07 	jmp	0xebe	; 0xebe <PigroService::cmd_arm_read_next()>
    1290:	0f 90       	pop	r0
    1292:	0f 90       	pop	r0
    1294:	0f 90       	pop	r0
    1296:	0f 90       	pop	r0
    1298:	df 91       	pop	r29
    129a:	cf 91       	pop	r28
    129c:	1f 91       	pop	r17
    129e:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <PigroService::cmd_arm_write_next()>
    12a2:	0f 90       	pop	r0
    12a4:	0f 90       	pop	r0
    12a6:	0f 90       	pop	r0
    12a8:	0f 90       	pop	r0
    12aa:	df 91       	pop	r29
    12ac:	cf 91       	pop	r28
    12ae:	1f 91       	pop	r17
    12b0:	0c 94 8d 05 	jmp	0xb1a	; 0xb1a <PigroService::cmd_arm_program_next()>
    12b4:	0f 90       	pop	r0
    12b6:	0f 90       	pop	r0
    12b8:	0f 90       	pop	r0
    12ba:	0f 90       	pop	r0
    12bc:	df 91       	pop	r29
    12be:	cf 91       	pop	r28
    12c0:	1f 91       	pop	r17
    12c2:	0c 94 e3 07 	jmp	0xfc6	; 0xfc6 <PigroService::cmd_arm_read()>
    12c6:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <PigroProto::pkt+0x2>
    12ca:	81 30       	cpi	r24, 0x01	; 1
    12cc:	09 f0       	breq	.+2      	; 0x12d0 <PigroService::handle_packet()+0x254>
    12ce:	ec ce       	rjmp	.-552    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    12d0:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <PigroProto::pkt+0x3>
    12d4:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <STM32::memap>
    12d8:	62 cf       	rjmp	.-316    	; 0x119e <PigroService::handle_packet()+0x122>
    12da:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <PigroProto::pkt+0x2>
    12de:	81 e0       	ldi	r24, 0x01	; 1
    12e0:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <PigroProto::pkt+0x3>
    12e4:	5c cf       	rjmp	.-328    	; 0x119e <PigroService::handle_packet()+0x122>
    12e6:	4a e6       	ldi	r20, 0x6A	; 106
    12e8:	50 e0       	ldi	r21, 0x00	; 0
    12ea:	61 2f       	mov	r22, r17
    12ec:	8b e0       	ldi	r24, 0x0B	; 11
    12ee:	0e 94 13 03 	call	0x626	; 0x626 <STM32::xpacc(unsigned char, unsigned char, unsigned long*)>
    12f2:	a5 cf       	rjmp	.-182    	; 0x123e <PigroService::handle_packet()+0x1c2>
    12f4:	c1 98       	cbi	0x18, 1	; 24
    12f6:	d8 ce       	rjmp	.-592    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    12f8:	d8 98       	cbi	0x1b, 0	; 27
    12fa:	d6 ce       	rjmp	.-596    	; 0x10a8 <PigroService::handle_packet()+0x2c>
    12fc:	d8 9a       	sbi	0x1b, 0	; 27
    12fe:	d4 ce       	rjmp	.-600    	; 0x10a8 <PigroService::handle_packet()+0x2c>

00001300 <main>:
    1300:	82 eb       	ldi	r24, 0xB2	; 178
    1302:	87 bb       	out	0x17, r24	; 23
    1304:	83 ed       	ldi	r24, 0xD3	; 211
    1306:	8d b9       	out	0x0d, r24	; 13
    1308:	8f ed       	ldi	r24, 0xDF	; 223
    130a:	8a bb       	out	0x1a, r24	; 26
    130c:	8a e0       	ldi	r24, 0x0A	; 10
    130e:	8b bb       	out	0x1b, r24	; 27
    1310:	85 b7       	in	r24, 0x35	; 53
    1312:	80 64       	ori	r24, 0x40	; 64
    1314:	85 bf       	out	0x35, r24	; 53
    1316:	1b b8       	out	0x0b, r1	; 11
    1318:	88 e9       	ldi	r24, 0x98	; 152
    131a:	8a b9       	out	0x0a, r24	; 10
    131c:	86 e8       	ldi	r24, 0x86	; 134
    131e:	80 bd       	out	0x20, r24	; 32
    1320:	80 e0       	ldi	r24, 0x00	; 0
    1322:	80 bd       	out	0x20, r24	; 32
    1324:	8f e2       	ldi	r24, 0x2F	; 47
    1326:	89 b9       	out	0x09, r24	; 9
    1328:	78 94       	sei
    132a:	c1 e0       	ldi	r28, 0x01	; 1
    132c:	d2 e0       	ldi	r29, 0x02	; 2
    132e:	0e 94 a8 00 	call	0x150	; 0x150 <PigroProto::read_packet()>
    1332:	40 91 86 00 	lds	r20, 0x0086	; 0x800086 <uart+0x12>
    1336:	88 23       	and	r24, r24
    1338:	c1 f0       	breq	.+48     	; 0x136a <main+0x6a>
    133a:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <uart+0x13>
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	9c 01       	movw	r18, r24
    1342:	2f 5f       	subi	r18, 0xFF	; 255
    1344:	3f 4f       	sbci	r19, 0xFF	; 255
    1346:	27 70       	andi	r18, 0x07	; 7
    1348:	42 17       	cp	r20, r18
    134a:	11 f1       	breq	.+68     	; 0x1390 <main+0x90>
    134c:	8c 58       	subi	r24, 0x8C	; 140
    134e:	9f 4f       	sbci	r25, 0xFF	; 255
    1350:	fc 01       	movw	r30, r24
    1352:	c2 87       	std	Z+10, r28	; 0x0a
    1354:	20 93 87 00 	sts	0x0087, r18	; 0x800087 <uart+0x13>
    1358:	55 9a       	sbi	0x0a, 5	; 10
    135a:	0e 94 3e 08 	call	0x107c	; 0x107c <PigroService::handle_packet()>
    135e:	0e 94 a8 00 	call	0x150	; 0x150 <PigroProto::read_packet()>
    1362:	40 91 86 00 	lds	r20, 0x0086	; 0x800086 <uart+0x12>
    1366:	81 11       	cpse	r24, r1
    1368:	e8 cf       	rjmp	.-48     	; 0x133a <main+0x3a>
    136a:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <uart+0x13>
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	9c 01       	movw	r18, r24
    1372:	2f 5f       	subi	r18, 0xFF	; 255
    1374:	3f 4f       	sbci	r19, 0xFF	; 255
    1376:	27 70       	andi	r18, 0x07	; 7
    1378:	42 17       	cp	r20, r18
    137a:	91 f0       	breq	.+36     	; 0x13a0 <main+0xa0>
    137c:	8c 58       	subi	r24, 0x8C	; 140
    137e:	9f 4f       	sbci	r25, 0xFF	; 255
    1380:	fc 01       	movw	r30, r24
    1382:	d2 87       	std	Z+10, r29	; 0x0a
    1384:	20 93 87 00 	sts	0x0087, r18	; 0x800087 <uart+0x13>
    1388:	55 9a       	sbi	0x0a, 5	; 10
    138a:	0e 94 a3 01 	call	0x346	; 0x346 <PigroProto::skip_trash()>
    138e:	cf cf       	rjmp	.-98     	; 0x132e <main+0x2e>
    1390:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Timer::count>
    1394:	81 3a       	cpi	r24, 0xA1	; 161
    1396:	08 f7       	brcc	.-62     	; 0x135a <main+0x5a>
    1398:	88 95       	sleep
    139a:	40 91 86 00 	lds	r20, 0x0086	; 0x800086 <uart+0x12>
    139e:	cd cf       	rjmp	.-102    	; 0x133a <main+0x3a>
    13a0:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <Timer::count>
    13a4:	81 3a       	cpi	r24, 0xA1	; 161
    13a6:	88 f7       	brcc	.-30     	; 0x138a <main+0x8a>
    13a8:	88 95       	sleep
    13aa:	40 91 86 00 	lds	r20, 0x0086	; 0x800086 <uart+0x12>
    13ae:	dd cf       	rjmp	.-70     	; 0x136a <main+0x6a>

000013b0 <__tablejump2__>:
    13b0:	ee 0f       	add	r30, r30
    13b2:	ff 1f       	adc	r31, r31
    13b4:	05 90       	lpm	r0, Z+
    13b6:	f4 91       	lpm	r31, Z
    13b8:	e0 2d       	mov	r30, r0
    13ba:	09 94       	ijmp

000013bc <_exit>:
    13bc:	f8 94       	cli

000013be <__stop_program>:
    13be:	ff cf       	rjmp	.-2      	; 0x13be <__stop_program>
    13c0:	4f 08       	sbc	r4, r15
    13c2:	65 08       	sbc	r6, r5
    13c4:	70 08       	sbc	r7, r0
    13c6:	54 08       	sbc	r5, r4
    13c8:	8d 08       	sbc	r8, r13
    13ca:	a2 08       	sbc	r10, r2
    13cc:	ab 08       	sbc	r10, r11
    13ce:	d8 08       	sbc	r13, r8
    13d0:	e1 08       	sbc	r14, r1
    13d2:	f1 08       	sbc	r15, r1
    13d4:	22 09       	sbc	r18, r2
    13d6:	3f 09       	sbc	r19, r15
    13d8:	48 09       	sbc	r20, r8
    13da:	51 09       	sbc	r21, r1
    13dc:	5a 09       	sbc	r21, r10
    13de:	5c 08       	sbc	r5, r12
